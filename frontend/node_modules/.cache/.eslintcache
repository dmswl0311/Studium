[{"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/index.js":"1","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/App.js":"2","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/footer/Footer.js":"3","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/main/main.js":"4","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/navigation/Navigation.js":"5","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/group/Group.js":"6","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/event/Event.js":"7","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/category/Category.js":"8","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/event-detail/event-detail.js":"9","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/member/Member.js":"10","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/group-detail/group-detail.js":"11","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/ScrollToTop.js":"12","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/search/search.js":"13","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/group-member-detail/group-member-detail.js":"14","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/mypage/mypage.js":"15","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/calendar/Calendar.js":"16","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/login/login.js":"17","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/signup/signup.js":"18"},{"size":197,"mtime":1623051694804,"results":"19","hashOfConfig":"20"},{"size":1345,"mtime":1624267222368,"results":"21","hashOfConfig":"20"},{"size":2153,"mtime":1624338926935,"results":"22","hashOfConfig":"20"},{"size":9800,"mtime":1624266834080,"results":"23","hashOfConfig":"20"},{"size":1172,"mtime":1624338498305,"results":"24","hashOfConfig":"20"},{"size":6959,"mtime":1624342808508,"results":"25","hashOfConfig":"20"},{"size":8841,"mtime":1624342895170,"results":"26","hashOfConfig":"20"},{"size":538,"mtime":1623209032046,"results":"27","hashOfConfig":"20"},{"size":1881,"mtime":1624005203465,"results":"28","hashOfConfig":"20"},{"size":2296,"mtime":1624246632904,"results":"29","hashOfConfig":"20"},{"size":1745,"mtime":1624009894366,"results":"30","hashOfConfig":"20"},{"size":245,"mtime":1623123968511,"results":"31","hashOfConfig":"20"},{"size":8095,"mtime":1624173600144,"results":"32","hashOfConfig":"20"},{"size":1574,"mtime":1624005550793,"results":"33","hashOfConfig":"20"},{"size":4070,"mtime":1624259496248,"results":"34","hashOfConfig":"20"},{"size":9174,"mtime":1624259601403,"results":"35","hashOfConfig":"20"},{"size":3863,"mtime":1624266282824,"results":"36","hashOfConfig":"20"},{"size":9716,"mtime":1624260902970,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"zxr4em",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/index.js",[],["86","87"],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/App.js",["88"],"import React from \"react\";\nimport { BrowserRouter, Switch, Router, Route } from \"react-router-dom\"\nimport Navigation from \"./components/navigation/Navigation\"\nimport Footer from \"./components/footer/Footer\"\nimport ScrollToTop from './components/ScrollToTop'\nimport Main from \"./routes/main/main\"\nimport EventDetail from \"./routes/event-detail/event-detail\"\nimport GroupDetail from \"./routes/group-detail/group-detail\"\nimport Search from './routes/search/search'\nimport Mypage from './routes/mypage/mypage'\nimport GroupMemberDetail from \"./routes/group-member-detail/group-member-detail\";\nimport Login from \"./routes/login/login\";\nimport signup from \"./routes/signup/signup\";\n\nfunction App(){\n  return (\n  <div>\n    <BrowserRouter>\n      <Navigation />\n      <ScrollToTop />\n      <Switch>\n        <Route path=\"/\" exact={true} component={Main} />\n        <Route path=\"/event/:eventId\" component={EventDetail} />\n        <Route path=\"/study/:studyId\"  component={GroupDetail} />\n        <Route path=\"/member/:memberId\" component={GroupMemberDetail} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/mypage\" component={Mypage} />\n        <Route path=\"/login\" component={Login} />\n        <Route paht=\"/signup\" component={signup} />\n      </Switch>\n      <Footer />\n    </BrowserRouter>\n  </div>\n  )\n}\n\nexport default App;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/footer/Footer.js",[],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/main/main.js",[],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/navigation/Navigation.js",["89"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport './Navigation.css'\n\nfunction Navigation(){\n    return (\n    <div className=\"nav\">\n        <div className=\"nav-logo\">\n            <Link to=\"/\">\n                <img src=\"/images/studium_logo.png\"></img>\n            </Link>\n        </div>\n        <div className=\"create-group\">\n                <Link to=\"/start\">새 그룹 시작하기</Link>\n        </div>\n        <div className=\"nav-login\">\n            {sessionStorage.getItem('memberName') !== null ? \n                <div>\n                    <Link to=\"/mypage\">\n                    <span className=\"member-name\">{sessionStorage.getItem('memberName')}</span>\n                    </Link>\n                    님 안녕하세요 <button>로그아웃</button>\n                </div>\n                :\n                <div>\n                    <Link to=\"/login\">로그인</Link>\n                    <Link to=\"/signup\">회원가입</Link>\n                </div>\n            // {/* <Link to=\"/login\">로그인</Link>\n            // <Link to=\"/signup\">회원가입</Link> */}\n            }\n        </div>\n    </div>\n    );\n}\n\nexport default Navigation;\n","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/group/Group.js",["90","91","92","93","94"],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/event/Event.js",["95","96","97"],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/category/Category.js",["98"],"import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\nimport './Category.css'\n\nfunction Category( {thumbnail, name} ) {\n    return (\n        <div className=\"category-thum\">\n            <div className=\"category-thumbnail\">\n                <img src={thumbnail} alt=\"category-thumnail\"></img>\n            </div>\n            <p>{name}</p>\n        </div>\n    )\n}\n\nCategory.propTypes = {\n    thumbnail: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n}\n\nexport default Category;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/event-detail/event-detail.js",["99"],"import React from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\nimport Event from \"../../components/event/Event\"\nimport './event-detail.css'\n\nclass EventDetail extends React.Component{\n    constructor(){\n        super();\n        this.state = {event: [], attendants: [], study: []}\n    }\n\n    getEventDetail = async () => {\n        const url = \"http://localhost:8080\" + this.props.match.url;\n        console.log(url);\n        const data = await axios.get(url);\n        console.log(\"이벤트 내용: \" + JSON.stringify(data.data[0]));\n        console.log(\"스터디 내용: \" + JSON.stringify(data.data[1]));\n        console.log(\"참석자 내용: \" + JSON.stringify(data.data[2]));\n        this.setState({\n            event: data.data[0],\n            study: data.data[1],\n            attendants: data.data[2]\n        });\n    }\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push(\"/\");\n        }\n        this.getEventDetail();\n    }\n    render() {\n        const { location } = this.props;\n        const { event, study, attendants } = this.state;\n        if(event !== undefined){\n            return (\n                <div className=\"event-detail\" key={event.eventId}>\n                    <Event\n                        image = {event.eventImage}\n                        title = {event.eventName}\n                        description = {event.eventDescription}\n                        date = {event.eventDate}\n                        location = {event.eventLocation}\n                        display = {location.state.display}\n                        study = {study}\n                        attendants = {attendants}\n                    />\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default EventDetail;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/member/Member.js",["100","101","102","103"],"import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport './Member.css'\n\n\nfunction Member( {image, name, city, gender, display} ){\n    if(display === \"thum-event\"){\n        return (\n            <div>\n                <div className=\"thum-event-member-image\">\n                        <img src={image}></img>\n                </div>\n                <div className=\"thum-event-member-name\">\n                        <p className=\"member-name\">{name}</p>\n                        <p className=\"member-city\">{city}</p>\n                </div>\n            </div>\n        )\n    } else if(display === \"thum-group\"){\n        return (\n            <div>\n                <div className=\"thum-group-member-image\">\n                        <img src={image}></img>\n                </div>\n                <div className=\"thum-group-member-name\">\n                        <p className=\"member-name\">{name}</p>\n                </div>\n            </div>\n        )\n    } else if(display === \"detail-inGroup\"){\n        return (\n            <div className=\"detail-inGroup\">\n                <h2>스터디 회원 정보</h2>\n                <div className=\"detail-inGroup-image\">\n                    <img src={image} arl=\"\" />\n                </div>\n                <div className=\"detail-inGroup-info\">\n                    <span>이름 : {name}</span>\n                    <span>성별 : {gender}</span>\n                    <span>지역 : {city}</span>\n                </div>\n            </div>\n        )\n    } else if(display === \"mypage\") {\n        return (\n            <div>\n                 <div className=\"detail-inGroup\">\n                    <h2>스터디 회원 정보</h2>\n                    <div className=\"detail-inGroup-image\">\n                        <img src={image} arl=\"\" />\n                    </div>\n                    <div className=\"detail-inGroup-info\">\n                        <span>이름 : {name}</span>\n                        <span>성별 : {gender}</span>\n                        <span>지역 : {city}</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nMember.propTypes = {\n    image: PropTypes.string,\n    name: PropTypes.string,\n    gender: PropTypes.string,\n    city: PropTypes.string,\n    display: PropTypes.string\n}\n\nexport default Member;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/group-detail/group-detail.js",["104"],"import React from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\nimport './group-detail.css'\nimport Group from '../../components/group/Group'\n\nclass GroupDetail extends React.Component{\n    constructor(){\n        super();\n        this.state = { study: [] , members: [], events: []}\n    }\n    getStudyDetail = async () => {\n        const url = \"http://localhost:8080\" + this.props.match.url;\n        console.log(url);\n        const data = await axios.get(url);\n        console.log(JSON.stringify(data.data));\n        this.setState({\n            study: data.data[0], \n            members: data.data[1],\n            events: data.data[2]\n        });\n    }\n\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push(\"/\");\n        }\n\n        this.getStudyDetail();\n    }\n    \n    render() {\n        const { location } = this.props;\n        const { study, members, events } = this.state;\n        if(study !== undefined){\n            return (\n                <div className=\"group-detail\" key={study.studyId}>\n                    <Group\n                        id = {study.studyId}\n                        image = {study.studyImage}\n                        name = {study.studyName}\n                        description = {study.studyDescription}\n                        memberCnt = {study.memberCnt}\n                        tag = {study.studyTag}\n                        display = {location.state.display}\n                        members = {members}\n                        events = {events}\n                    />\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default GroupDetail;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/ScrollToTop.js",[],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/search/search.js",["105","106","107"],"import React from \"react\"\nimport { Link } from \"react-router-dom\";\nimport './search.css';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Autoplay }from \"swiper\";\nimport \"swiper/swiper-bundle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\nimport Group from \"../../components/group/Group\"\nimport Event from \"../../components/event/Event\"\nimport axios from \"axios\";\n\n\n\nclass Search extends React.Component{\n    constructor(props) {\n        super(props);\n\n        SwiperCore.use([Autoplay]);\n        const { location } = this.props;\n        \n        this.state = {\n            //isLoggedIn: location.state.isLoggedIn,\n            value: \"study\",\n            keyword: (location.search.split('&')[0]).split('=')[1],\n            condition: (location.search.split('&')[1]).split('=')[1],\n            search: location.search,\n            slides: [\n                <SwiperSlide key=\"slide1\">\n                    <img\n                    src=\"/images/search_main1.jpeg\"\n                    alt=\"search_main1\"\n                    />\n                </SwiperSlide>,\n                <SwiperSlide key=\"slide2\">\n                    <img\n                    src=\"/images/search_main2.jpeg\"\n                    alt=\"search_main2\"\n                    />\n                </SwiperSlide>,\n                <SwiperSlide key=\"slide3\">\n                    <img\n                    src=\"/images/search_main3.jpeg\"\n                    alt=\"search_main3\"\n                    />\n                </SwiperSlide>\n            ],\n            results: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.keywordChange = this.keywordChange.bind(this);\n    }\n    \n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n    }\n\n    keywordChange = (event) => {\n        this.setState({keyword: event.target.value});\n    }\n\n    render() {\n        const {\n            search,\n            //isLoggedIn,\n            value,\n            keyword,\n            condition,\n            results,\n            slides\n        } = this.state;\n        const {history} = this.props;\n        console.log(this.props);\n        // const keyword = (search.split('&')[0]).split('=')[1];\n\n        return (\n            <div className=\"search\">\n                <Swiper\n                    spaceBetween={30} \n                    centeredSlides={true} \n                    loop={true}\n                    autoplay={{\n                        \"delay\": 3000,\n                        \"disableOnInteraction\": false\n                    }}\n                >\n                    {slides}\n                </Swiper>\n                <div className=\"search-box\">\n                    <select value={this.state.value} onChange={this.handleChange}>\n                        <option value=\"study\">스터디 찾기</option>\n                        <option value=\"event\">이벤트 찾기</option>\n                    </select>\n                    <input type=\"text\" className=\"searchByKeyword\" placeholder=\"키워드 검색\" onChange={this.keywordChange} defaultValue={decodeURIComponent(keyword)}></input>\n                    {/* <input type=\"text\" className=\"searchByLocation\" placeholder=\"위치 검색\"></input> */}\n                    {/* <Link to={{\n                        pathname: '/search',\n                        search: \"keyword=\" + keyword + \"&searchCondition=\" + value,\n                        state: { isLoggedIn }\n                    }}>\n                    <button><FontAwesomeIcon icon={faSearch} /></button>\n                    </Link> */}\n                    <button onClick={this.doSearch.bind(this)}><FontAwesomeIcon icon={faSearch} /></button>\n                </div>\n                <div className=\"search-result\">\n                    {condition === \"study\" ? results.map(result => (\n                        <Link to={{\n                            pathname: '/study/' + (result.studyId),\n                            state: {\n                                //isLoggedIn: isLoggedIn,\n                                display: \"group-detail\"\n                            }\n                        }}>\n                        <div className=\"group-thum\" key={result.studyId}>\n                            <Group\n                                image = {result.studyImage}\n                                name = {result.studyName}\n                                memberCnt = {result.memberCnt}\n                                display = \"thum-main\"\n                            />\n                        </div>\n                        </Link>\n                    ))\n                    : results.map(result => (\n                        <div className=\"event-thum\" key={result.eventId}>\n                        <Link to={{\n                            pathname: '/event/' + (result.eventId),\n                            state: {\n                                //isLoggedIn: isLoggedIn,\n                                display: \"event-detail\"\n                            }\n                        }}>\n                            <Event\n                                title = {result.eventName}\n                                description = {result.eventDescription}\n                                date = {result.eventDate}\n                                location = {result.eventLocation}\n                                display = \"thum-main\"\n                            />\n                        </Link>\n                        </div>\n                    ))}\n                    {/* {isResultGroups ? \n                    results.map(result => (\n                        <Link to={{\n                            pathname: '/group-detail',\n                            state: {\n                                isLoggedIn: isLoggedIn,\n                                image: result.image,\n                                name: result.title,\n                                numOfMembers: result.members,\n                                display: \"group-detail\"\n                            }\n                        }}>\n                            <Group\n                                key = {result.id}\n                                image = {result.image}\n                                name = {result.title}\n                                numOfMembers = {result.members}\n                                display = \"thum-main\"\n                            />\n                        </Link>\n                    )) : \n                    results.map(result => (\n                        <Event\n                            key = {result.id}\n                            title = {result.title}\n                            description = {result.content}\n                            date = {\"N/A\"}\n                            location = {result.location}\n                            display = \"thum-main\"\n                        />\n                    ))} */}\n                    <div className=\"search-result-more\">\n                        <button>Load more results</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    doSearch = () => {\n        // console.log(this.state.value);\n        // console.log(this.state.keyword);\n        const url = \"http://localhost:8080/search?keyword=\" + encodeURIComponent(this.state.keyword) + \"&searchCondition=\" + this.state.value;\n        this.getSearchResults(url);\n        this.props.history.push(\"search?keyword=\" + encodeURIComponent(this.state.keyword) + \"&searchCondition=\" + this.state.value);\n        this.setState({condition: this.state.value});\n    }\n    getSearchResults = async (url) => {\n        // const url = \"http://localhost:8080/search\" + this.state.search;\n        // console.log(url);\n        const data = await axios.get(url);\n        console.log(\"Search data: \" + JSON.stringify(data));\n        this.setState({results: data.data});\n    }\n    componentDidMount(){\n        const url = \"http://localhost:8080/search\" + this.state.search;\n        this.getSearchResults(url);\n    }\n}\n\nexport default Search;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/group-member-detail/group-member-detail.js",["108","109","110"],"import React from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\n// import './group-detail.css'\nimport Member from \"../../components/member/Member\";\n\nclass GroupMemberDetail extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push(\"/\");\n        }\n    }\n    \n    render() {\n        const { location } = this.props;\n        return (\n            <Member\n                image = {location.state.image}\n                name = {location.state.name}\n                city = {location.state.city}\n                gender = {location.state.gender}\n                display = {location.state.display}\n            />\n        )\n        // if(study !== undefined){\n        //     return (\n        //         <div className=\"group-detail\" key={study.studyId}>\n        //             <Group\n        //                 id = {study.studyId}\n        //                 image = {study.studyImage}\n        //                 name = {study.studyName}\n        //                 description = {study.studyDescription}\n        //                 memberCnt = {study.memberCnt}\n        //                 tag = {study.studyTag}\n        //                 display = {location.state.display}\n        //                 members = {members}\n        //             />\n        //         </div>\n        //     )\n        // } else {\n        //     return null;\n        // }\n    }\n}\n\nexport default GroupMemberDetail;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/mypage/mypage.js",[],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/calendar/Calendar.js",["111","112","113"],"import React from 'react';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport './Calendar.css'\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nexport default class Calendar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        dateContext: moment(),\n        today: moment(),\n        showMonthPopup: false,\n        showYearPopup: false,\n        selectedDay: null\n    }\n\n    weekdays = moment.weekdays(); //[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednessday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    weekdaysShort = moment.weekdaysShort(); // [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n    months = moment.months();\n\n    year = () => {\n        return this.state.dateContext.format(\"Y\");\n    }\n    month = () => {\n        return this.state.dateContext.format(\"MMMM\");\n    }\n    monthAsNumber = (monthInLetter) => {\n        //console.log(\"input : \" + monthInLetter);\n        if(monthInLetter === \"January\") {\n            return \"01\";\n        } else if(monthInLetter === \"February\"){\n            return \"02\";\n        } else if(monthInLetter === \"March\"){\n            return \"03\";\n        } else if(monthInLetter === \"April\"){\n            return \"04\";\n        } else if(monthInLetter === \"May\"){\n            return \"05\";\n        } else if(monthInLetter === \"June\"){\n            return \"06\";\n        } else if(monthInLetter === \"July\"){\n            return \"07\";\n        } else if(monthInLetter === \"August\"){\n            return \"08\";\n        } else if(monthInLetter === \"September\"){\n            return \"09\";\n        } else if(monthInLetter === \"October\"){\n            return \"10\";\n        } else if(monthInLetter === \"November\"){\n            return \"11\";\n        } else if(monthInLetter === \"December\"){\n            return \"12\";\n        } else {\n            return \"error\";\n        }\n    }\n    daysInMonth = () => {\n        return this.state.dateContext.daysInMonth();\n    }\n    currentDate = () => {\n        console.log(\"currentDate: \", this.state.dateContext.get(\"date\"));\n        return this.state.dateContext.get(\"date\");\n    }\n    currentDay = () => {\n        return this.state.dateContext.format(\"D\");\n    }\n\n    firstDayOfMonth = () => {\n        let dateContext = this.state.dateContext;\n        let firstDay = moment(dateContext).startOf('month').format('d'); // Day of week 0...1..5...6\n        return firstDay;\n    }\n\n    setMonth = (month) => {\n        let monthNo = this.months.indexOf(month);\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).set(\"month\", monthNo);\n        this.setState({\n            dateContext: dateContext\n        });\n    }\n\n    nextMonth = () => {\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).add(1, \"month\");\n        this.setState({\n            dateContext: dateContext\n        });\n        this.props.onNextMonth && this.props.onNextMonth();\n    }\n\n    prevMonth = () => {\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).subtract(1, \"month\");\n        this.setState({\n            dateContext: dateContext\n        });\n        this.props.onPrevMonth && this.props.onPrevMonth();\n    }\n\n    onSelectChange = (e, data) => {\n        this.setMonth(data);\n        this.props.onMonthChange && this.props.onMonthChange();\n\n    }\n    SelectList = (props) => {\n        let popup = props.data.map((data) => {\n            return (\n                <div key={data}>\n                    <a href=\"#\" onClick={(e)=> {this.onSelectChange(e, data)}}>\n                        {data}\n                    </a>\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"month-popup\">\n                {popup}\n            </div>\n        );\n    }\n\n    onChangeMonth = (e, month) => {\n        this.setState({\n            showMonthPopup: !this.state.showMonthPopup\n        });\n    }\n\n    MonthNav = () => {\n        return (\n            <span className=\"label-month\"\n                onClick={(e)=> {this.onChangeMonth(e, this.month())}}>\n                {this.month()}\n                {/* {this.state.showMonthPopup &&\n                 <this.SelectList data={this.months} />\n                } */}\n            </span>\n        );\n    }\n\n    showYearEditor = () => {\n        this.setState({\n            showYearNav: true\n        });\n    }\n\n    setYear = (year) => {\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).set(\"year\", year);\n        this.setState({\n            dateContext: dateContext\n        })\n    }\n    onYearChange = (e) => {\n        this.setYear(e.target.value);\n        this.props.onYearChange && this.props.onYearChange(e, e.target.value);\n    }\n\n    onKeyUpYear = (e) => {\n        if (e.which === 13 || e.which === 27) {\n            this.setYear(e.target.value);\n            this.setState({\n                showYearNav: false\n            })\n        }\n    }\n\n    YearNav = () => {\n        return (\n            this.state.showYearNav ?\n            <input\n                defaultValue = {this.year()}\n                className=\"editor-year\"\n                ref={(yearInput) => { this.yearInput = yearInput}}\n                onKeyUp= {(e) => this.onKeyUpYear(e)}\n                onChange = {(e) => this.onYearChange(e)}\n                type=\"number\"\n                placeholder=\"year\"/>\n            :\n            <span\n                className=\"label-year\"\n                onDoubleClick={(e)=> { this.showYearEditor()}}>\n                {this.year()}\n            </span>\n        );\n    }\n\n    onDayClick = (e, day) => {\n        this.setState({\n            selectedDay: day\n        }, () => {\n            console.log(\"SELECTED DAY: \", this.state.selectedDay);\n        });\n\n        this.props.onDayClick && this.props.onDayClick(e, day);\n    }\n\n    render() {\n        const eventDates = this.props.eventDates;\n        //console.log(\"props.eventDate\" + eventDates);\n        // Map the weekdays i.e Sun, Mon, Tue etc as <td>\n        let weekdays = this.weekdaysShort.map((day) => {\n            return (\n                <td key={day} className=\"week-day\">{day}</td>\n            )\n        });\n\n        let blanks = [];\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\n            blanks.push(<td key={i * 80} className=\"emptySlot\">\n                {\"\"}\n                </td>\n            );\n        }\n\n        //console.log(\"blanks: \", blanks);\n\n        let eventDatesThisMonth = [];\n        if(eventDates.length > 0){\n            eventDates.map(date => (\n                ( this.year() === date.split(\"-\")[0] && this.monthAsNumber(this.month()) === date.split(\"-\")[1] ) ?\n                eventDatesThisMonth.push(date.split(\"-\")[2])\n                : \"\"\n            ))\n        }\n\n        let daysInMonth = [];\n        for (let d = 1; d <= this.daysInMonth(); d++) {\n            let className = (d == this.currentDay() ? \"day current-day\": \"day\");\n            let selectedClass = (eventDatesThisMonth.includes(String(d)) ? \" selected-day \" : \"\")\n            daysInMonth.push(\n                <td key={d} className={className + selectedClass} >\n                    <span onClick={(e)=>{this.onDayClick(e, d)}}>{d}</span>\n                </td>\n            );\n        }\n\n\n        //console.log(\"days: \", daysInMonth);\n\n        var totalSlots = [...blanks, ...daysInMonth];\n        let rows = [];\n        let cells = [];\n\n        totalSlots.forEach((row, i) => {\n            if ((i % 7) !== 0) {\n                cells.push(row);\n            } else {\n                let insertRow = cells.slice();\n                rows.push(insertRow);\n                cells = [];\n                cells.push(row);\n            }\n            if (i === totalSlots.length - 1) {\n                let insertRow = cells.slice();\n                rows.push(insertRow);\n            }\n        });\n\n        let trElems = rows.map((d, i) => {\n            return (\n                <tr key={i*100}>\n                    {d}\n                </tr>\n            );\n        })\n\n        return (\n            <div className=\"calendar-container\" style={this.style}>\n                <table className=\"calendar\">\n                    <thead>\n                        <tr className=\"calendar-header\">\n                            <td colSpan=\"7\">\n                                <FontAwesomeIcon className=\"prevButton\" icon={faChevronLeft} onClick={(e)=> {this.prevMonth()}} />\n                                <this.MonthNav />\n                                <FontAwesomeIcon className=\"nextButton\" icon={faChevronRight} onClick={(e)=> {this.nextMonth()}} />\n                                {\" \"}\n                                <this.YearNav />\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            {weekdays}\n                        </tr>\n                        {trElems}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/login/login.js",["114","115","116","117","118","119","120","121"],"import React, { Component, useState, useEffect } from 'react';\nimport './login.css';\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport axios from \"axios\";\n// import { Button, Form, FormGroup, Label, Input }\n//     from 'reactstrap';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import { FacebookLoginButton } from 'react-social-login-buttons';\n\nclass Login extends Component{\n\n  constructor(props){\n    super(props);\n    this.state ={\n        memberId : '',\n        memberPassword : ''\n    };\n    \n    this.handleRequest = this.handleRequest.bind(this);\n  }\n  handleRequest = async () =>{\n    const response = await axios({\n      method: 'post',\n      url: 'http://localhost:8080/login.do',\n      data: {\n        memberId : this.state.memberId,\n        memberPassword : this.state.memberPassword\n      }\n    });\n    console.log(response);\n    console.log(response.data);\n    // if (response.data==\"ok\"){\n    //   var loginId=this.state.memberId;\n    //   alert(loginId);\n    //   document.location.href = \"http://localhost:3000/\";\n    // }else if(response.data==\"no-id\"){\n    //   alert(\"아이디가 존재하지 않습니다!\");\n    // }else{\n    //   alert(\"비밀번호가 틀렸습니다!\");\n    // }\n    if (response.data[0]==\"no-id\"){\n      alert(\"아이디가 존재하지 않습니다!\");\n    }else if(response.data[0]==\"404\"){\n      alert(\"비밀번호가 틀렸습니다!\");\n    }else{\n      // var loginId=this.state.memberId;\n      // alert(loginId);\n      var loginName=response.data[1];\n      alert(loginName+\"님 반갑습니다!\");\n      sessionStorage.setItem('memberId',  this.state.memberId);\n      sessionStorage.setItem('memberName',  loginName);\n      // <Link to={{\n      //   pathname: '/',\n      //   state: {\n      //       memberId: this.state.memberId,\n      //       memberName:loginName,\n      //   }\n      // }}>\n      // </Link>\n      document.location.href = \"http://localhost:3000/\";\n    }\n  }\n\n  // inputId = (e) =>{\n  //   this.setState({\n  //     memverID : e.target.value\n  //   })\n  // }\n\n  // inputPassword = (e) =>{\n  //   this.setState({\n  //     memverPassword : e.target.value\n  //   })\n  // }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"login-form\">\n          <div id=\"login-header\">\n            <h1><span className=\"login-title\">Stadium</span></h1>\n            \n            <h3 className=\"logintext-center\">Login</h3>\n          </div>\n\n          <div>\n            <div className=\"login-inputarea\">\n              <input id=\"login-id-area\" type=\"ID\" placeholder=\"Enter your Id\" name={'memberId'} \n                    value={this.state.memberId} \n                    onChange={(e) => this.setState({memberId : e.target.value})} ></input>\n            </div>\n          </div>\n          <div>\n            <div className=\"login-inputarea\">\n              <input id=\"login-password-area\" type=\"Password\" placeholder=\"Enter your Password\" name={'memberPassword'} \n                    value={this.state.memberPassword} \n                    onChange={(e) => this.setState({memberPassword : e.target.value})}\n              ></input>\n            </div>\n          </div>\n          <div>\n            <div className=\"login-btn-login-area\">\n              <button className=\"btn-lg\" onClick={this.handleRequest}>Log in</button>\n            </div>\n          </div>\n            <div className=\"login-text-center\"> \n                or continue with your social account\n            </div>\n          {/* <FacebookLoginButton className=\"mt-3 mb-3\">\n            \n          </FacebookLoginButton> */}\n          <div className=\"text-center\">\n            <a href=\"/sign-up\">Sign up</a>\n            <span className=\"p-2\">|</span>\n            <a href=\"/forgot-password\">Forgot Password</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/signup/signup.js",["122","123","124"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport './signup.css';\n// import { Button, Form, FormGroup, Label, Input }\n//     from 'reactstrap';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nclass signup extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      msg : '',\n      memberId : \"\",\n      memberPassword : \"\",\n      memberRepassWord : \"\",\n      memberName : \"\",\n      memberBirth : \"\",\n      memberGender : \"\",\n      memberAddress : \"\",\n      memberEmail : \"\",\n      memberAccount : \"\",\n      pMessage:'',\n      usableId : false\n    };\n\n    this.handleRequest = this.handleRequest.bind(this);\n  }\n\n  handleRequest = async () => {\n    const response = await axios({\n      method: 'post',\n      url: 'http://localhost:8080/signup.do',\n      data: {\n        memberId : this.state.memberId,\n        memberPassword : this.state.memberPassword,\n        memberBirth : this.state.memberBirth,\n        memberName : this.state.memberName,\n        memberAddress : this.state.memberAddress,\n        memberBirth : this.state.memberBirth,\n        memberGender : this.state.memberGender,\n        memberAccount : this.state.memberAccount\n      }\n    });\n    console.log(response);\n  }\n\n  inputId = (e) => {\n    this.setState({\n      memberId : e.target.value    \n      })\n  }\n\n\n\n  // clickSignup = (e) => {\n  //   e.preventDefault();\n  //   const {memberId, memberPassword, memberBirth, memberEmail, memberAccount, usableId} = this.state;\n\n  //     if( usableId === false){\n  //       alert(\"아이디 중복체크를 해주세요.\")\n  //     }\n  //     else if(!memberId || !memberPassword || memberBirth || memberEmail || memberAccount){\n  //       alert(\"필수 항목 모두 작성해주세요.\")\n  //     }\n  //     else{\n  //       fetch(\"http://localhost:3000/signup\", {\n  //         //백 api 호출하기\n  //         method: \"POST\",\n  //         headers:{\n  //           \"Content-Type\" : \"application/json\"\n  //         },\n  //         body: JSON.stringify({\n  //           user_id : this.state.memberId,\n  //           user_password : this.state.memberPassword,\n  //           user_birth : this.state.memberBirth,\n  //           user_email : this.state.memberEmail,\n  //           user_account : this.state.memberAccount\n  //         })// 이 컴포넌트에 저장된 state값중에 필요한 항목들만 POST\n  //       }).then(res => {if(res.status === 400){\n  //         alert(\"다시 한 번 확인해주세요.\");\n  //       }else{\n  //         alert(\"가입 완료\");\n  //         this.props.history.push(\"/\") // 로그인 완료 후 메인페이지로 이동\n  //       }\n  //     })\n  //   }\n  // }\n\n  idCheck = (e) => {\n      e.preventDefault();\n      const { usableId } = this.state; // 비구조화 할당\n\n      fetch(\"http://localhost:3000/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\" : \"application/json\"\n        },\n        body: JSON.stringify({usableId: this.state.memberId})\n      })\n      .then(response => {if(response.status === 200){\n        alert(\"사용 가능한 아이디 입니다.\");\n        this.setState({usableId: true})\n      }else if(response.status === 409){\n        alert(\"이미 가입되어 있는 아이디 입니다.\");\n      }else{\n        alert(\"사용 불가한 아이디 입니다.\");\n      }\n    });\n  }\n\n  handleConfirmPassword = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    }) //사용자가 입력한 값을 setState함수를 통해 업데이트\n    if (e.target.value !== this.state.memberRepassWord) {\n      this.setState({\n        pMessage: \"❌ 비밀번호가 일치하지 않습니다 :(\"\n      }) //사용자가 입력한 값이 재확인 비번과 일치하지 않을 경우\n    }\n    else if (e.target.value === '') {\n      this.setState({\n        pMessage: ''\n      }) // 아직 아무것도 입력하지 않았다면 당연히 메시지 띄워주면 안된다.\n    }\n    else if (e.target.value === this.state.memberRepassWord) {\n      this.setState({\n        pMessage: \"✅ 비밀번호가 일치합니다 :)\"\n        \n      }) // 사용자가 입력한 비밀번호가 두개 다 일치하면 보여주는 메시지.\n    }\n  }\n\n  handleConfirmrePassword = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n    if (e.target.value !== this.state.memberPassword) {\n      this.setState({\n        pMessage: \"❌ 비밀번호가 일치하지 않습니다 :(\"\n      })\n    }\n    else if (e.target.value === '') {\n      this.setState({\n        pMessage: ''\n      })\n    }\n    else if (e.target.value === this.state.memberPassword) {\n      this.setState({\n        pMessage: \"✅비밀번호가 일치합니다 :)\"\n      })\n    }\n  } \n\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"signup-form\">\n          <div id=\"signup-header\">\n            <h1><span className=\"signup-title\">Stadium</span></h1>\n            <h3 className=\"text-center\">Signup</h3>\n          </div>\n        <div className=\"signup-container\">\n          <div>\n            <div className=\"signup-inputarea-id\">\n              <input id=\"signup-id-area\" type=\"ID\" placeholder=\"Enter your Id\"  name={'memberId'}\n                  value={this.state.memberId} \n                  onChange={(e) => this.setState({memberId : e.target.value})}></input>\n              {/* <input id=\"signup-id-area\" type=\"ID\" placeholder=\"Enter your Id\" onChange={this.inputId} name=\"memberId\"></input> */}\n                <div className=\"id-check\">\n                  <button className=\"btn-id-check\">중복체크</button>\n                </div>\n              <div>\n            </div>\n          </div>\n            <div className=\"signup-inputarea\">\n              <input id=\"signup-password-area\" type=\"Password\" placeholder=\"Enter your Password\" name={'memberPassword'} \n                  value={this.state.memberPassword}\n\t\t\t\t          onChange={this.handleConfirmPassword} onChange={(e) => this.setState({memberPassword : e.target.value})}></input>\n                  {/* onChange={this.handleConfirmPassword} onChange={(e) => this.setState({memberPassword : e.target.value}) */}\n            </div>\n          </div>\n          <div>\n            <div className=\"signup-inputarea\">\n              <input id=\"signup-passwordCheck-area\" type=\"Password\" placeholder=\"Enter your Password one more\" name={'memberRepassWord'} \n                  value={this.state.memberRepassWord}\n\t\t\t\t          onChange={this.handleConfirmrePassword}></input>\n                  <p className=\"checktext\">{this.state.pMessage}</p>\n            </div>\n          </div>\n          <div>\n            <div className=\"signup-inputarea\">\n              <input id=\"signup-name\" type=\"text\" placeholder=\"Enter your Name\" name={'memberName'}\n                      value ={this.state.memberName}\n                      onChange={(e) => this.setState({memberName : e.target.value})}></input>\n            </div>\n          </div>\n          <div>\n            <div className=\"signup-inputarea\">\n              <input id=\"signup-address\" type=\"text\" placeholder=\"Enter your Address\" name={'memberAddress'}\n                      value ={this.state.memberAddress}\n                      onChange={(e) => this.setState({memberAddress : e.target.value})}\n              ></input>\n            </div>\n          </div>\n          <div>\n            <div className=\"signup-inputarea\">\n              <input id=\"signup-birthday\" type=\"text\" placeholder=\"Enter your birthday\" name={'memberBirth'}\n                      value ={this.state.memberBirth}\n                      onChange={(e) => this.setState({memberBirth : e.target.value})}\n              ></input>\n            </div>\n          </div>\n          <div>\n            <div className=\"signup-inputarea\">\n              <label id=\"signup-checkGender\">\n                <input  type=\"radio\" value=\"M\" name={'memberGender'} onChange={(e) => this.setState({memberGender : e.target.value})}></input>\n                   Man\n              </label>\n              <label id=\"signup-checkGender\">\n                <input  type=\"radio\" value=\"F\" name={'memberGender'} onChange={(e) => this.setState({memberGender : e.target.value})}></input>\n                   Woman\n              </label>\n            </div>\n          </div>\n          <div>\n            <div className=\"signup-inputarea\">\n              <input id=\"signup-email\" type=\"text\" placeholder=\"Enter your email\" name={'memberEmail'}\n                      value ={this.state.memberEmail}\n                      onChange={(e) => this.setState({memberEmail : e.target.value})}\n              ></input>\n            </div>\n          </div>\n          <div>\n            <div className=\"signup-inputarea\">\n              <input id=\"signup-account\" type=\"text\" placeholder=\"Enter your account\" name={'memberAccount'}\n                      value ={this.state.memberAccount}\n                      onChange={(e) => this.setState({memberAccount : e.target.value})}\n              ></input>\n            </div>\n          </div>\n          <div>\n            <div className=\"signup-btn-login-area\">\n              <button className=\"btn-lg\" onClick={this.handleRequest}>Sign up</button>\n            </div>\n          </div>\n            {/* <div className=\"text-center\"> \n                or continue with your social account\n            </div> */}\n        \n          {/* <FacebookLoginButton className=\"mt-3 mb-3\">\n            \n          </FacebookLoginButton> */}\n          {/* <div>\n\n            <a href=\"/sign-up\">Sign up</a>\n            <span className=\"p-2\">|</span>\n            <a href=\"/forgot-password\">Forgot Password</a>\n\n          </div> */}\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default signup;",{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":2,"column":33,"nodeType":"131","messageId":"132","endLine":2,"endColumn":39},{"ruleId":"133","severity":1,"message":"134","line":10,"column":17,"nodeType":"135","endLine":10,"endColumn":53},{"ruleId":"129","severity":1,"message":"136","line":6,"column":9,"nodeType":"131","messageId":"132","endLine":6,"endColumn":22},{"ruleId":"133","severity":1,"message":"134","line":39,"column":21,"nodeType":"135","endLine":39,"endColumn":38},{"ruleId":"133","severity":1,"message":"134","line":52,"column":21,"nodeType":"135","endLine":52,"endColumn":38},{"ruleId":"133","severity":1,"message":"134","line":66,"column":25,"nodeType":"135","endLine":66,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":115,"column":36,"nodeType":"139","messageId":"140","endLine":115,"endColumn":38},{"ruleId":"129","severity":1,"message":"141","line":6,"column":35,"nodeType":"131","messageId":"132","endLine":6,"endColumn":43},{"ruleId":"133","severity":1,"message":"134","line":70,"column":74,"nodeType":"135","endLine":70,"endColumn":111},{"ruleId":"133","severity":1,"message":"134","line":81,"column":29,"nodeType":"135","endLine":81,"endColumn":133},{"ruleId":"129","severity":1,"message":"142","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"142","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":11,"column":25,"nodeType":"135","endLine":11,"endColumn":42},{"ruleId":"133","severity":1,"message":"134","line":23,"column":25,"nodeType":"135","endLine":23,"endColumn":42},{"ruleId":"133","severity":1,"message":"134","line":35,"column":21,"nodeType":"135","endLine":35,"endColumn":47},{"ruleId":"133","severity":1,"message":"134","line":50,"column":25,"nodeType":"135","endLine":50,"endColumn":51},{"ruleId":"129","severity":1,"message":"142","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"143","line":64,"column":13,"nodeType":"131","messageId":"132","endLine":64,"endColumn":19},{"ruleId":"129","severity":1,"message":"144","line":66,"column":13,"nodeType":"131","messageId":"132","endLine":66,"endColumn":18},{"ruleId":"129","severity":1,"message":"145","line":72,"column":16,"nodeType":"131","messageId":"132","endLine":72,"endColumn":23},{"ruleId":"129","severity":1,"message":"146","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":13},{"ruleId":"129","severity":1,"message":"142","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":8,"column":5,"nodeType":"149","messageId":"150","endLine":10,"endColumn":6},{"ruleId":"147","severity":1,"message":"148","line":8,"column":5,"nodeType":"149","messageId":"150","endLine":10,"endColumn":6},{"ruleId":"151","severity":1,"message":"152","line":113,"column":21,"nodeType":"135","endLine":113,"endColumn":80},{"ruleId":"137","severity":1,"message":"138","line":233,"column":32,"nodeType":"139","messageId":"140","endLine":233,"endColumn":34},{"ruleId":"129","severity":1,"message":"153","line":1,"column":28,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"154","line":1,"column":38,"nodeType":"131","messageId":"132","endLine":1,"endColumn":47},{"ruleId":"129","severity":1,"message":"155","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":23},{"ruleId":"129","severity":1,"message":"156","line":3,"column":25,"nodeType":"131","messageId":"132","endLine":3,"endColumn":31},{"ruleId":"129","severity":1,"message":"157","line":3,"column":33,"nodeType":"131","messageId":"132","endLine":3,"endColumn":38},{"ruleId":"129","severity":1,"message":"142","line":3,"column":40,"nodeType":"131","messageId":"132","endLine":3,"endColumn":44},{"ruleId":"137","severity":1,"message":"138","line":41,"column":25,"nodeType":"139","messageId":"140","endLine":41,"endColumn":27},{"ruleId":"137","severity":1,"message":"138","line":43,"column":30,"nodeType":"139","messageId":"140","endLine":43,"endColumn":32},{"ruleId":"158","severity":1,"message":"159","line":40,"column":9,"nodeType":"160","messageId":"140","endLine":40,"endColumn":20},{"ruleId":"129","severity":1,"message":"161","line":92,"column":15,"nodeType":"131","messageId":"132","endLine":92,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":180,"column":53,"nodeType":"164","messageId":"165","endLine":180,"endColumn":119},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'faAlignCenter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'faSearch' is defined but never used.","'Link' is defined but never used.","'search' is assigned a value but never used.","'value' is assigned a value but never used.","'history' is assigned a value but never used.","'axios' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'useEffect' is defined but never used.","'BrowserRouter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","no-dupe-keys","Duplicate key 'memberBirth'.","ObjectExpression","'usableId' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation"]
[{"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/index.js":"1","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/App.js":"2","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/footer/Footer.js":"3","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/main/main.js":"4","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/navigation/Navigation.js":"5","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/group/Group.js":"6","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/event/Event.js":"7","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/category/Category.js":"8","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/event-detail/event-detail.js":"9","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/member/Member.js":"10","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/group-detail/group-detail.js":"11","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/ScrollToTop.js":"12","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/search/search.js":"13","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/group-member-detail/group-member-detail.js":"14","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/mypage/mypage.js":"15","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/calendar/Calendar.js":"16"},{"size":197,"mtime":1623051694804,"results":"17","hashOfConfig":"18"},{"size":1157,"mtime":1624193895430,"results":"19","hashOfConfig":"18"},{"size":2194,"mtime":1624096134175,"results":"20","hashOfConfig":"18"},{"size":11152,"mtime":1624103369256,"results":"21","hashOfConfig":"18"},{"size":630,"mtime":1623844041762,"results":"22","hashOfConfig":"18"},{"size":6014,"mtime":1624174710150,"results":"23","hashOfConfig":"18"},{"size":7660,"mtime":1624173572918,"results":"24","hashOfConfig":"18"},{"size":538,"mtime":1623209032046,"results":"25","hashOfConfig":"18"},{"size":1881,"mtime":1624005203465,"results":"26","hashOfConfig":"18"},{"size":2296,"mtime":1624246632904,"results":"27","hashOfConfig":"18"},{"size":1745,"mtime":1624009894366,"results":"28","hashOfConfig":"18"},{"size":245,"mtime":1623123968511,"results":"29","hashOfConfig":"18"},{"size":8095,"mtime":1624173600144,"results":"30","hashOfConfig":"18"},{"size":1574,"mtime":1624005550793,"results":"31","hashOfConfig":"18"},{"size":4070,"mtime":1624259496248,"results":"32","hashOfConfig":"18"},{"size":9174,"mtime":1624259601403,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"zxr4em",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/index.js",[],["76","77"],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/App.js",["78"],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/footer/Footer.js",[],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/main/main.js",["79","80","81","82"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Event from \"../../components/event/Event\";\nimport Group from \"../../components/group/Group\";\nimport Category from \"../../components/category/Category\";\nimport './main.css';\n\nclass Main extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            isLoggedIn: false,\n            isEventsLoading: false,\n            isGroupsLoading: false,\n            isCategoriesLoading: false,\n            // events: [\n            //     {\n            //         id: 1,\n            //         title: \"Meet up for learning English\",\n            //         description: \"This meeting is about...\",\n            //         date: \"2021.06.21 FRI 10:00 - 12:00\",\n            //         location: \"대구 혁신도시\"\n            //     },\n            //     {\n            //         id: 2,\n            //         title: \"Awesome language exchange and make good friends in Daegu\",\n            //         description: \"Awesome party with international friends, join us and learn languages and make friends!\",\n            //         date: \"2021.06.23 SAT 11:00 - 13:00\",\n            //         location: \"대구 율하역\"\n            //     },\n            //     {\n            //         id: 3,\n            //         title: \"Learning AWS\",\n            //         description: \"This meeting is about...\",\n            //         date: \"2021.06.30 MON 13:00 - 16:00\",\n            //         location: \"대구 동성로\"\n            //         }\n            // ],\n            groups: [],\n            categories: [\n                {\n                    id: \"101\",\n                    thumbnail: \"https://t1.daumcdn.net/liveboard/bookclub/93ff3a3b875349dda49bb3c9581a4532.jpeg\",\n                    name: \"외국어\"\n                },\n                {\n                    id: \"102\",\n                    thumbnail: \"https://image.freepik.com/free-vector/online-certification-illustration_23-2148575512.jpg\",\n                    name: \"자격증\"\n                },\n                {\n                    id: \"103\",\n                    thumbnail: \"https://blog.kakaocdn.net/dn/FYWhq/btqEt6aAvrk/Po8oyIHB7sw4DimFU3Rlhk/img.png\",\n                    name: \"취업\"\n                },\n                {\n                    id: \"104\",\n                    thumbnail: \"https://cdn.dribbble.com/users/879147/screenshots/7906715/media/1b1d2ef35dab525ed63b8b5816813132.jpg?compress=1&resize=400x300\",\n                    name: \"기술\"\n                },\n                {\n                    id: \"105\",\n                    thumbnail: \"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FOH5pw%2FbtqFBY3l84K%2FfBYboXoTEY3vQIvupcyLT0%2Fimg.jpg\",\n                    name: \"과학\"\n                },\n                {\n                    id: \"106\",\n                    thumbnail: \"https://vrthumb.clipartkorea.co.kr/2021/03/31/cm230005311.jpg\",\n                    name: \"경제\"\n                },\n                {\n                    id: \"107\",\n                    thumbnail: \"https://cdn.dribbble.com/users/1040983/screenshots/14588186/media/88ecf3d892e527ed697d813b44b781de.png?compress=1&resize=400x300\",\n                    name: \"독서\"\n                },\n                {\n                    id: \"108\",\n                    thumbnail: \"https://image.freepik.com/free-vector/painting-tools-elements-cartoon-colorful-set-art-supplies-easel-with-canvas-paint-tubes-brushes-pencil-watercolor-palette-drawing-creative-materials-for-workshops-designs_311563-31.jpg\",\n                    name: \"미술\"\n                },\n                {\n                    id: \"109\",\n                    thumbnail: \"https://image.freepik.com/free-vector/music-colorful-illustration_24908-57101.jpg\",\n                    name: \"음악\"\n                }\n                \n            ]\n        }\n    }\n\n    render() {\n        const {\n            isLoggedIn,\n            isEventsLoading,\n            isGroupsLoading,\n            isCategoriesLoading,\n            events, \n            groups,\n            categories\n        } = this.state;\n\n        return (\n            <div className=\"container\">\n                <div className=\"main-image\">\n                    <video autoPlay muted loop id=\"myVideo\">\n                        <source src=\"/images/video.mp4\" type=\"video/mp4\" />\n                        <source src=\"/images/video.webm\" type=\"video/webm\" />\n                        <strong>Your browser does not support the video tag.</strong>\n                    </video>\n                    <div className=\"main-letter\">\n                        <h3>저희가 도와드릴게요.</h3>\n                        <p>원하는 스터디 그룹을 찾아 함께 공부하는 경험을 즐겨보세요.</p>\n                        {/* <Link to=\"/register\"> */}\n                            <button onClick={this.doAction}>STUDIUM 가입하기</button>\n                        {/* </Link> */}\n                    </div>\n                </div>\n                <div className=\"content-area\">\n                    <div className=\"groups-wrap\">\n                        <p className=\"section-title\">추천 스터디</p>\n                        <p className=\"section-detail\">나랑 같이 공부할 그룹 찾기</p>\n                        <button>더보기</button>\n                        <div className=\"group\">\n                            {isGroupsLoading ? \"Loading..\" : groups.map(group => (\n                                <Link to={{\n                                    pathname: '/study/'+ (group.studyId),\n                                     \n                                    state: {\n                                        isLoggedIn: this.state.isLoggedIn,\n                                        display : \"group-detail\"\n                                    }\n                                }}>\n                                    <div className=\"group-thum\" key={group.studyId}>\n                                        <Group\n                                            image = {group.studyImage}\n                                            name = {group.studyName}\n                                            description = {group.studyDescription}\n                                            memberCnt = {group.memberCnt}\n                                            tag = {group.studyTag}\n                                            display = \"thum-main\"\n                                        />\n                                    </div>    \n                                </Link>    \n                            ))}\n                        </div>\n                    </div>\n                    {/* <div className=\"events-wrap\">\n                        <p className=\"section-title\">내 주변 이벤트</p>\n                        <p className=\"section-detail\">근처에서 곧 진행될 이벤트를 확인해보세요</p>\n                        <div className=\"event\">\n                            {isEventsLoading ? \"Loading...\" : events.map(event => (\n                                <Link to={{\n                                    pathname: '/event-detail',\n                                    state: {\n                                        isLoggedIn: isLoggedIn,\n                                        title: event.title,\n                                        description: event.description,\n                                        date: event.date,\n                                        location: event.location,\n                                        display: \"event-detail\"\n                                    }\n                                }}>\n                                    <Event\n                                        key = {event.id}\n                                        title = {event.title}\n                                        description = {event.description}\n                                        date = {event.date}\n                                        location = {event.location}\n                                        display = \"thum-main\"\n                                    />\n                                </Link>      \n                            ))}\n                        </div>\n                    </div> */}\n                    <div className=\"category-wrap\">\n                        <p className=\"section-title\">카테고리</p>\n                        <p className=\"section-detail\">관심 있는 주제로 그룹을 찾아보세요.</p>\n                        <div className=\"category\">\n                            {isCategoriesLoading ? \"Loading..\" : categories.map(category => (\n                                <Link to={{\n                                    //pathname : \"/search?keyword=\" + category.name,\n                                    pathname: '/search',\n                                    search: \"keyword=\" + category.name + \"&searchCondition=study\",\n                                    state: {\n                                        isLoggedIn: this.state.isLoggedIn,\n                                        name: category.name\n                                    }\n                                }}>\n                                    <Category\n                                        key = {category.id}\n                                        thumbnail = {category.thumbnail}\n                                        name = {category.name}\n                                    />\n                                </Link>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    \n    componentWillUnmount(){\n        this.setState( {isEventsLoading: true } );\n        this.setState( {isGroupsLoading: true } );\n        this.setState( {isCategoriesLoading: true} );\n    }\n    //Methods below are not fully implemented yet\n\n    //Get events from DB\n    //getEvents = async () => {\n    getEvents(){\n        /*\n        const {\n            data : {\n                data : {events}\n            }\n        } = await axios.get(\"request url\")\n        this.setState( {events: events, isEventsLoading: false} )\n        */\n        setTimeout(() => this.setState( {isEventsLoading: false} ), 3000);\n        //this.setState( {isEventsLoading: false} )\n    }\n\n    //Get groups from DB\n    getGroups = async () => {\n    //getGroups(){\n        const url = \"http://localhost:8080/\";\n        // const {\n        //     data : {\n        //         data : {groups}\n        //     }\n        const data = await axios.get(url);\n        //const data = await axios.get(url);\n        console.log(\"data : \" + JSON.stringify(data));\n        this.setState( {groups: data.data, isGroupsLoading: false} );\n        //this.setState( {isGroupsLoading: false} )\n    }\n\n    //Get categories from server\n    //getCategories = async () => {\n    getCategories(){\n        this.setState( {isCategoriesLoading: false} )\n    }\n\n     componentDidMount() {\n    //     this.getEvents();\n         this.getGroups();\n    //     this.getCategories();\n    }\n    \n}\n\nexport default Main;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/navigation/Navigation.js",["83"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport './Navigation.css'\n\nfunction Navigation(){\n    return (\n    <div className=\"nav\">\n        <div className=\"nav-logo\">\n            <Link to=\"/\">\n                <img src=\"/images/studium_logo.png\"></img>\n            </Link>\n        </div>\n        <div className=\"create-group\">\n                <Link to=\"/create-group\">스터디 만들기</Link>\n        </div>\n        <div className=\"nav-login\">\n            <Link to=\"/login\">로그인</Link>\n            <Link to=\"/register\">회원가입</Link>\n        </div>\n    </div>\n    );\n}\n\nexport default Navigation;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/group/Group.js",["84","85","86","87"],"import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faTags, faUsers } from \"@fortawesome/free-solid-svg-icons\";\nimport Member from '../member/Member'\nimport Event from '../event/Event'\nimport './Group.css'\n\nfunction Group ( {image, name, description, memberCnt, tag, display, members, events} ) {\n    if(display === \"thum-main\") {\n        return (\n            <div>\n                <div className=\"group-image\">\n                    <img src={image}></img>\n                </div>\n                <div className=\"group-detail\">\n                    <p className=\"group-tags\">{tag}</p>\n                    <p className=\"group-name\">{name}</p>\n                    <p className=\"group-numbers\">{memberCnt} 명의 회원이 있습니다.</p>\n                </div>\n            </div>\n        )\n    } else if(display === \"thum-event\") {\n        return (\n            <div className=\"group-thum-event\">\n                <div className=\"group-thum-event-image\">\n                    <img src={image}></img>\n                </div>\n                <div className=\"group-thum-event-detail\">\n                    <p className=\"group-name\">{name}</p>\n                    <p className=\"group-numbers\">{memberCnt} 명의 회원이 있습니다.</p>\n                    <p>가입하고 함께 공부해보세요!</p>\n                </div>\n            </div>\n        )\n    } else if(display === \"group-detail\") {\n        return (\n            <div>\n                <div className=\"group-detail-content-head\">\n                    <div className=\"content-head-image\">\n                        <img src={image}></img>\n                    </div>\n                    <div className=\"content-head-summary\">\n                        <h1>{name}</h1>\n                        <p><FontAwesomeIcon icon={faTags} /> {tag}</p>\n                        <p><FontAwesomeIcon icon={faUsers} /> 회원 {memberCnt}명</p>\n                        {members.some(member => (\n                            member.memberId === \"test\"\n                        )) ? <button id=\"create-event\">이벤트 만들기</button> : <button id=\"join\">스터디 가입하기</button>}\n                    </div>\n                </div>\n                {/* <div className=\"group-detail-tabs\">\n                    <ul>\n                        <li id=\"inof\" className=\"on\" onClick={this.showInfo}><a href=\"#\">정보</a></li>\n                        <li id=\"events\"><Link to={id+\"/events\"}>이벤트</Link></li>\n                        <li id=\"photos\"><Link to={id+\"/photos\"}>사진</Link></li>\n                    </ul>\n                    <button>이 그룹에 가입하기</button>\n                </div> */}\n                <div className=\"group-detail-content-body\">\n                    <div className=\"group-detail-overview\">\n                        <h3>스터디 소개</h3>\n                        <p>{description}</p>\n                    </div>\n                    <div className=\"group-members\">\n                        <h3>스터디 멤버</h3>\n                        <div className=\"members-thum\">\n                            {members.map(member => (\n                                <div className=\"thum-group-member\" key={member.memberId}>\n                                    <Link to={{\n                                        pathname: '/member/' + member.memberId,\n                                        state: {\n                                            image: member.memberImage,\n                                            name: member.memberName,\n                                            gender: member.memberGender,\n                                            city: member.memberAddress,\n                                            display: \"detail-inGroup\"\n                                        }\n                                    }}>\n                                        <Member\n                                            image = {member.memberImage}\n                                            name = {member.memberName}\n                                            display = \"thum-group\"\n                                        />\n                                    </Link>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    {events.length == 0 ? \"\" :\n                    <div className=\"group-detail-upcomingEvents\">\n                        <h3>이벤트</h3>\n                        {events.map(event => (\n                                <div className=\"thum-group-wrap\" key={event.eventId}>\n                                <Link to={{\n                                    pathname: '/event/' + event.eventId,\n                                    state: {\n                                        display: \"event-detail\"\n                                    }\n                                }}>\n                                    <Event\n                                        title = {event.eventName}\n                                        date = {event.eventDate}\n                                        location = {event.eventLocation}\n                                        description = {event.description}\n                                        display = \"thum-group\"\n                                    />\n                                </Link>\n                                </div>\n                            ))}\n                    </div>\n                    }\n                    {/* <div className=\"group-detail-photos\">\n                        <h3>사진</h3>\n                    </div> */}\n                </div>\n            </div>\n        )\n    } else{\n        return null;\n    }\n}\n\nGroup.propTypes = {\n    image: PropTypes.string,\n    name: PropTypes.string,\n    memberCnt: PropTypes.number,\n    tag: PropTypes.string,\n    display: PropTypes.string,\n    members: PropTypes.array\n}\n\nexport default Group;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/event/Event.js",["88","89","90"],"import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\nimport './Event.css'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClock, faMapMarkedAlt, faSearch, faThumbtack } from \"@fortawesome/free-solid-svg-icons\";\nimport Group from '../group/Group'\nimport Member from '../member/Member'\n\nfunction Event( {image, title, description, date, location, attendants, study, display} ) {\n    if(display === \"thum-main\") {\n        return (\n            <div>\n                <div className=\"event-thum-detail\">\n                    <p className=\"event-date\">{date}</p>\n                    <p className=\"event-title\">{title}</p>\n                    <p className=\"event-description\">{description}</p>\n                    <p className=\"event-location\">\n                        <FontAwesomeIcon icon={faThumbtack} /> {location}\n                    </p>\n                </div>\n            </div>\n        )\n    } else if(display === \"thum-group\"){\n        return (\n            <div>\n                <div className=\"thum-group\">\n                    <p className=\"event-date\">{date}</p>\n                    <p className=\"event-title\">{title}</p>\n                    <p className=\"event-location\">\n                        <FontAwesomeIcon icon={faThumbtack} /> {location}\n                    </p>\n                </div>\n            </div>\n        )\n    } else if(display === \"event-detail\") {\n        return (\n            <div className=\"event-detail\">\n                <div className=\"content-hd\">\n                    <p>{date}</p>\n                    <h1>[{title}]</h1>\n                    <div className=\"event-host\">\n                        <div className=\"event-host-image\">\n                            {attendants[0] === undefined ? \"Loading..\" : <img src={attendants[0].memberImage}></img>}\n                        </div>\n                        <div className=\"event-host-name\">\n                            <p style={{color:\"grey\"}}>Hosted by</p>\n                            {attendants[0] === undefined ? \"Loading..\" : <p>{attendants[0].memberName}</p>}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"content-bd\">\n                    <div className=\"content-bd-main\">\n                        <div className=\"main-image\">\n                            <img src=\"https://kung.kr/files/attach/images/3830964/814/596/007/bec42d29f1665ebc059ea81ada6b4611.jpg\"></img>\n                        </div>\n                        <div className=\"main-description\">\n                            <h3>세부사항</h3>\n                            <p>{description}</p>\n                            {/* <p>\n                                Saturday Morning English Talk Time at Hongdae<br />\n                                <br />\n                                Location?: Hongdae Terrace 서교동[masked] Floor<br />\n                                When?: 11:00 ~ 13:00 on Saturdays<br />\n                                <br />\n                                Inclusions:<br />\n                                2 drinks on the menu *Some drinks can’t be available in the morning<br />\n                                2 hours of meetup on Saturday morning hosted by Seohee<br />\n                                Chance to speak daily conversation to social issues<br />\n                                Get some information about go-to restaurants and places from locals<br />\n                                2 hours of social meetup following this event<br />\n                                <br />\n                                Event Description:<br />\n                                Short summary / hook of the meetup:<br />\n                                Good morning! GSM Hongdae opens a brand-new morning English speaking group finally.<br />\n                                Come and join us and share your opinions on various topics from real-life topics to current issues.<br />\n                            </p> */}\n                        </div>\n                        <div className=\"main-attendants\">\n                            <h3>참석자</h3>\n                            <div className=\"attendants-member\">\n                                {attendants.map(attendant => (\n                                    <div className=\"thum-event-member\" key={attendant.memberId}>\n                                        <Link to={{\n                                            pathname: '/member/' + attendant.memberId,\n                                            state: {\n                                                image: attendant.memberImage,\n                                                name: attendant.memberName,\n                                                gender: attendant.memberGender,\n                                                city: attendant.memberAddress,\n                                                display: \"detail-inGroup\"\n                                            }\n                                        }}>\n                                            <Member\n                                                image = {attendant.memberImage}\n                                                name = {attendant.memberName}\n                                                city = {attendant.memberAddress}\n                                                display = \"thum-event\"\n                                            />\n                                        </Link>\n                                    </div>\n                                ))} \n                            </div>\n                        </div>\n                        <div className=\"main-join\">\n                            <div className=\"main-join-left\">\n                                <p>{date}</p>\n                                <h3>{title}</h3>\n                            </div>\n                            <div className=\"main-join-right\">\n                                <button>참석하기</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"content-bd-side\">\n                        <div className=\"side-group\">\n                            <Group\n                                image = {study.studyImage}\n                                name = {study.studyName}\n                                memberCnt = {study.memberCnt}\n                                tags = {study.studyTag}\n                                display = {\"thum-event\"}\n                            />\n                        </div>\n                        <div className=\"side-summary\">\n                            <div className=\"summary-date\">\n                                <p><FontAwesomeIcon icon={faClock} /> {date}</p>\n                            </div>\n                            <div className=\"summary-location\">\n                                <p><FontAwesomeIcon icon={faMapMarkedAlt} /> {location}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div> \n            </div>\n        )\n    } else {\n        return (\n            <div>???</div>\n        )\n    }\n}\n\nEvent.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n    date: PropTypes.string,\n    location: PropTypes.string,\n    attendents: PropTypes.array,\n    group: PropTypes.array,\n    display: PropTypes.string,\n}\n\n// Need these API calls to fetch data \n// 1. host's info -> content head\n// 2. group's info -> content body / side\n// 3. members who will be attend -> content body / main\n\nexport default Event;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/category/Category.js",["91"],"import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\nimport './Category.css'\n\nfunction Category( {thumbnail, name} ) {\n    return (\n        <div className=\"category-thum\">\n            <div className=\"category-thumbnail\">\n                <img src={thumbnail} alt=\"category-thumnail\"></img>\n            </div>\n            <p>{name}</p>\n        </div>\n    )\n}\n\nCategory.propTypes = {\n    thumbnail: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n}\n\nexport default Category;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/event-detail/event-detail.js",["92"],"import React from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\nimport Event from \"../../components/event/Event\"\nimport './event-detail.css'\n\nclass EventDetail extends React.Component{\n    constructor(){\n        super();\n        this.state = {event: [], attendants: [], study: []}\n    }\n\n    getEventDetail = async () => {\n        const url = \"http://localhost:8080\" + this.props.match.url;\n        console.log(url);\n        const data = await axios.get(url);\n        console.log(\"이벤트 내용: \" + JSON.stringify(data.data[0]));\n        console.log(\"스터디 내용: \" + JSON.stringify(data.data[1]));\n        console.log(\"참석자 내용: \" + JSON.stringify(data.data[2]));\n        this.setState({\n            event: data.data[0],\n            study: data.data[1],\n            attendants: data.data[2]\n        });\n    }\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push(\"/\");\n        }\n        this.getEventDetail();\n    }\n    render() {\n        const { location } = this.props;\n        const { event, study, attendants } = this.state;\n        if(event !== undefined){\n            return (\n                <div className=\"event-detail\" key={event.eventId}>\n                    <Event\n                        image = {event.eventImage}\n                        title = {event.eventName}\n                        description = {event.eventDescription}\n                        date = {event.eventDate}\n                        location = {event.eventLocation}\n                        display = {location.state.display}\n                        study = {study}\n                        attendants = {attendants}\n                    />\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default EventDetail;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/member/Member.js",["93","94","95","96"],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/group-detail/group-detail.js",["97"],"import React from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\nimport './group-detail.css'\nimport Group from '../../components/group/Group'\n\nclass GroupDetail extends React.Component{\n    constructor(){\n        super();\n        this.state = { study: [] , members: [], events: []}\n    }\n    getStudyDetail = async () => {\n        const url = \"http://localhost:8080\" + this.props.match.url;\n        console.log(url);\n        const data = await axios.get(url);\n        console.log(JSON.stringify(data.data));\n        this.setState({\n            study: data.data[0], \n            members: data.data[1],\n            events: data.data[2]\n        });\n    }\n\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push(\"/\");\n        }\n\n        this.getStudyDetail();\n    }\n    \n    render() {\n        const { location } = this.props;\n        const { study, members, events } = this.state;\n        if(study !== undefined){\n            return (\n                <div className=\"group-detail\" key={study.studyId}>\n                    <Group\n                        id = {study.studyId}\n                        image = {study.studyImage}\n                        name = {study.studyName}\n                        description = {study.studyDescription}\n                        memberCnt = {study.memberCnt}\n                        tag = {study.studyTag}\n                        display = {location.state.display}\n                        members = {members}\n                        events = {events}\n                    />\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default GroupDetail;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/ScrollToTop.js",[],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/search/search.js",["98","99","100"],"import React from \"react\"\nimport { Link } from \"react-router-dom\";\nimport './search.css';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Autoplay }from \"swiper\";\nimport \"swiper/swiper-bundle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\nimport Group from \"../../components/group/Group\"\nimport Event from \"../../components/event/Event\"\nimport axios from \"axios\";\n\n\n\nclass Search extends React.Component{\n    constructor(props) {\n        super(props);\n\n        SwiperCore.use([Autoplay]);\n        const { location } = this.props;\n        \n        this.state = {\n            //isLoggedIn: location.state.isLoggedIn,\n            value: \"study\",\n            keyword: (location.search.split('&')[0]).split('=')[1],\n            condition: (location.search.split('&')[1]).split('=')[1],\n            search: location.search,\n            slides: [\n                <SwiperSlide key=\"slide1\">\n                    <img\n                    src=\"/images/search_main1.jpeg\"\n                    alt=\"search_main1\"\n                    />\n                </SwiperSlide>,\n                <SwiperSlide key=\"slide2\">\n                    <img\n                    src=\"/images/search_main2.jpeg\"\n                    alt=\"search_main2\"\n                    />\n                </SwiperSlide>,\n                <SwiperSlide key=\"slide3\">\n                    <img\n                    src=\"/images/search_main3.jpeg\"\n                    alt=\"search_main3\"\n                    />\n                </SwiperSlide>\n            ],\n            results: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.keywordChange = this.keywordChange.bind(this);\n    }\n    \n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n    }\n\n    keywordChange = (event) => {\n        this.setState({keyword: event.target.value});\n    }\n\n    render() {\n        const {\n            search,\n            //isLoggedIn,\n            value,\n            keyword,\n            condition,\n            results,\n            slides\n        } = this.state;\n        const {history} = this.props;\n        console.log(this.props);\n        // const keyword = (search.split('&')[0]).split('=')[1];\n\n        return (\n            <div className=\"search\">\n                <Swiper\n                    spaceBetween={30} \n                    centeredSlides={true} \n                    loop={true}\n                    autoplay={{\n                        \"delay\": 3000,\n                        \"disableOnInteraction\": false\n                    }}\n                >\n                    {slides}\n                </Swiper>\n                <div className=\"search-box\">\n                    <select value={this.state.value} onChange={this.handleChange}>\n                        <option value=\"study\">스터디 찾기</option>\n                        <option value=\"event\">이벤트 찾기</option>\n                    </select>\n                    <input type=\"text\" className=\"searchByKeyword\" placeholder=\"키워드 검색\" onChange={this.keywordChange} defaultValue={decodeURIComponent(keyword)}></input>\n                    {/* <input type=\"text\" className=\"searchByLocation\" placeholder=\"위치 검색\"></input> */}\n                    {/* <Link to={{\n                        pathname: '/search',\n                        search: \"keyword=\" + keyword + \"&searchCondition=\" + value,\n                        state: { isLoggedIn }\n                    }}>\n                    <button><FontAwesomeIcon icon={faSearch} /></button>\n                    </Link> */}\n                    <button onClick={this.doSearch.bind(this)}><FontAwesomeIcon icon={faSearch} /></button>\n                </div>\n                <div className=\"search-result\">\n                    {condition === \"study\" ? results.map(result => (\n                        <Link to={{\n                            pathname: '/study/' + (result.studyId),\n                            state: {\n                                //isLoggedIn: isLoggedIn,\n                                display: \"group-detail\"\n                            }\n                        }}>\n                        <div className=\"group-thum\" key={result.studyId}>\n                            <Group\n                                image = {result.studyImage}\n                                name = {result.studyName}\n                                memberCnt = {result.memberCnt}\n                                display = \"thum-main\"\n                            />\n                        </div>\n                        </Link>\n                    ))\n                    : results.map(result => (\n                        <div className=\"event-thum\" key={result.eventId}>\n                        <Link to={{\n                            pathname: '/event/' + (result.eventId),\n                            state: {\n                                //isLoggedIn: isLoggedIn,\n                                display: \"event-detail\"\n                            }\n                        }}>\n                            <Event\n                                title = {result.eventName}\n                                description = {result.eventDescription}\n                                date = {result.eventDate}\n                                location = {result.eventLocation}\n                                display = \"thum-main\"\n                            />\n                        </Link>\n                        </div>\n                    ))}\n                    {/* {isResultGroups ? \n                    results.map(result => (\n                        <Link to={{\n                            pathname: '/group-detail',\n                            state: {\n                                isLoggedIn: isLoggedIn,\n                                image: result.image,\n                                name: result.title,\n                                numOfMembers: result.members,\n                                display: \"group-detail\"\n                            }\n                        }}>\n                            <Group\n                                key = {result.id}\n                                image = {result.image}\n                                name = {result.title}\n                                numOfMembers = {result.members}\n                                display = \"thum-main\"\n                            />\n                        </Link>\n                    )) : \n                    results.map(result => (\n                        <Event\n                            key = {result.id}\n                            title = {result.title}\n                            description = {result.content}\n                            date = {\"N/A\"}\n                            location = {result.location}\n                            display = \"thum-main\"\n                        />\n                    ))} */}\n                    <div className=\"search-result-more\">\n                        <button>Load more results</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    doSearch = () => {\n        // console.log(this.state.value);\n        // console.log(this.state.keyword);\n        const url = \"http://localhost:8080/search?keyword=\" + encodeURIComponent(this.state.keyword) + \"&searchCondition=\" + this.state.value;\n        this.getSearchResults(url);\n        this.props.history.push(\"search?keyword=\" + encodeURIComponent(this.state.keyword) + \"&searchCondition=\" + this.state.value);\n        this.setState({condition: this.state.value});\n    }\n    getSearchResults = async (url) => {\n        // const url = \"http://localhost:8080/search\" + this.state.search;\n        // console.log(url);\n        const data = await axios.get(url);\n        console.log(\"Search data: \" + JSON.stringify(data));\n        this.setState({results: data.data});\n    }\n    componentDidMount(){\n        const url = \"http://localhost:8080/search\" + this.state.search;\n        this.getSearchResults(url);\n    }\n}\n\nexport default Search;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/group-member-detail/group-member-detail.js",["101","102","103"],"import React from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\n// import './group-detail.css'\nimport Member from \"../../components/member/Member\";\n\nclass GroupMemberDetail extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push(\"/\");\n        }\n    }\n    \n    render() {\n        const { location } = this.props;\n        return (\n            <Member\n                image = {location.state.image}\n                name = {location.state.name}\n                city = {location.state.city}\n                gender = {location.state.gender}\n                display = {location.state.display}\n            />\n        )\n        // if(study !== undefined){\n        //     return (\n        //         <div className=\"group-detail\" key={study.studyId}>\n        //             <Group\n        //                 id = {study.studyId}\n        //                 image = {study.studyImage}\n        //                 name = {study.studyName}\n        //                 description = {study.studyDescription}\n        //                 memberCnt = {study.memberCnt}\n        //                 tag = {study.studyTag}\n        //                 display = {location.state.display}\n        //                 members = {members}\n        //             />\n        //         </div>\n        //     )\n        // } else {\n        //     return null;\n        // }\n    }\n}\n\nexport default GroupMemberDetail;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/mypage/mypage.js",[],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/calendar/Calendar.js",["104","105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":2,"column":33,"nodeType":"113","messageId":"114","endLine":2,"endColumn":39},{"ruleId":"111","severity":1,"message":"115","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":13},{"ruleId":"111","severity":1,"message":"116","line":94,"column":13,"nodeType":"113","messageId":"114","endLine":94,"endColumn":23},{"ruleId":"111","severity":1,"message":"117","line":95,"column":13,"nodeType":"113","messageId":"114","endLine":95,"endColumn":28},{"ruleId":"111","severity":1,"message":"118","line":98,"column":13,"nodeType":"113","messageId":"114","endLine":98,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":10,"column":17,"nodeType":"121","endLine":10,"endColumn":53},{"ruleId":"119","severity":1,"message":"120","line":15,"column":21,"nodeType":"121","endLine":15,"endColumn":38},{"ruleId":"119","severity":1,"message":"120","line":28,"column":21,"nodeType":"121","endLine":28,"endColumn":38},{"ruleId":"119","severity":1,"message":"120","line":42,"column":25,"nodeType":"121","endLine":42,"endColumn":42},{"ruleId":"122","severity":1,"message":"123","line":91,"column":36,"nodeType":"124","messageId":"125","endLine":91,"endColumn":38},{"ruleId":"111","severity":1,"message":"126","line":6,"column":35,"nodeType":"113","messageId":"114","endLine":6,"endColumn":43},{"ruleId":"119","severity":1,"message":"120","line":44,"column":74,"nodeType":"121","endLine":44,"endColumn":111},{"ruleId":"119","severity":1,"message":"120","line":55,"column":29,"nodeType":"121","endLine":55,"endColumn":133},{"ruleId":"111","severity":1,"message":"127","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"127","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":11,"column":25,"nodeType":"121","endLine":11,"endColumn":42},{"ruleId":"119","severity":1,"message":"120","line":23,"column":25,"nodeType":"121","endLine":23,"endColumn":42},{"ruleId":"119","severity":1,"message":"120","line":35,"column":21,"nodeType":"121","endLine":35,"endColumn":47},{"ruleId":"119","severity":1,"message":"120","line":50,"column":25,"nodeType":"121","endLine":50,"endColumn":51},{"ruleId":"111","severity":1,"message":"127","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"128","line":64,"column":13,"nodeType":"113","messageId":"114","endLine":64,"endColumn":19},{"ruleId":"111","severity":1,"message":"129","line":66,"column":13,"nodeType":"113","messageId":"114","endLine":66,"endColumn":18},{"ruleId":"111","severity":1,"message":"130","line":72,"column":16,"nodeType":"113","messageId":"114","endLine":72,"endColumn":23},{"ruleId":"111","severity":1,"message":"131","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":13},{"ruleId":"111","severity":1,"message":"127","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":8,"column":5,"nodeType":"134","messageId":"135","endLine":10,"endColumn":6},{"ruleId":"132","severity":1,"message":"133","line":8,"column":5,"nodeType":"134","messageId":"135","endLine":10,"endColumn":6},{"ruleId":"136","severity":1,"message":"137","line":113,"column":21,"nodeType":"121","endLine":113,"endColumn":80},{"ruleId":"122","severity":1,"message":"123","line":233,"column":32,"nodeType":"124","messageId":"125","endLine":233,"endColumn":34},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Event' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'isEventsLoading' is assigned a value but never used.","'events' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'faSearch' is defined but never used.","'Link' is defined but never used.","'search' is assigned a value but never used.","'value' is assigned a value but never used.","'history' is assigned a value but never used.","'axios' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]
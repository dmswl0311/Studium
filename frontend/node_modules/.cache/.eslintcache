[{"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/index.js":"1","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/App.js":"2","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/footer/Footer.js":"3","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/main/main.js":"4","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/navigation/Navigation.js":"5","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/group/Group.js":"6","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/event/Event.js":"7","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/category/Category.js":"8","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/event-detail/event-detail.js":"9","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/member/Member.js":"10","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/group-detail/group-detail.js":"11","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/ScrollToTop.js":"12","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/search/search.js":"13","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/group-member-detail/group-member-detail.js":"14","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/mypage/mypage.js":"15","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/calendar/Calendar.js":"16"},{"size":197,"mtime":1623051694804,"results":"17","hashOfConfig":"18"},{"size":1157,"mtime":1624193895430,"results":"19","hashOfConfig":"18"},{"size":2194,"mtime":1624096134175,"results":"20","hashOfConfig":"18"},{"size":9795,"mtime":1624266211642,"results":"21","hashOfConfig":"18"},{"size":628,"mtime":1624260902970,"results":"22","hashOfConfig":"18"},{"size":6014,"mtime":1624265099192,"results":"23","hashOfConfig":"18"},{"size":7660,"mtime":1624173572918,"results":"24","hashOfConfig":"18"},{"size":538,"mtime":1623209032046,"results":"25","hashOfConfig":"18"},{"size":1881,"mtime":1624005203465,"results":"26","hashOfConfig":"18"},{"size":2296,"mtime":1624246632904,"results":"27","hashOfConfig":"18"},{"size":1745,"mtime":1624009894366,"results":"28","hashOfConfig":"18"},{"size":245,"mtime":1623123968511,"results":"29","hashOfConfig":"18"},{"size":8095,"mtime":1624173600144,"results":"30","hashOfConfig":"18"},{"size":1574,"mtime":1624005550793,"results":"31","hashOfConfig":"18"},{"size":4070,"mtime":1624259496248,"results":"32","hashOfConfig":"18"},{"size":9174,"mtime":1624259601403,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"zxr4em",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/index.js",[],["76","77"],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/App.js",["78"],"import React from \"react\";\nimport { BrowserRouter, Switch, Router, Route } from \"react-router-dom\"\nimport Navigation from \"./components/navigation/Navigation\"\nimport Footer from \"./components/footer/Footer\"\nimport ScrollToTop from './components/ScrollToTop'\nimport Main from \"./routes/main/main\"\nimport EventDetail from \"./routes/event-detail/event-detail\"\nimport GroupDetail from \"./routes/group-detail/group-detail\"\nimport Search from './routes/search/search'\nimport Mypage from './routes/mypage/mypage'\nimport GroupMemberDetail from \"./routes/group-member-detail/group-member-detail\";\n\n\nfunction App(){\n  return (\n  <div>\n    <BrowserRouter>\n      <Navigation />\n      <ScrollToTop />\n      <Switch>\n        <Route path=\"/\" exact={true} component={Main} />\n        <Route path=\"/event/:eventId\" component={EventDetail} />\n        <Route path=\"/study/:studyId\"  component={GroupDetail} />\n        <Route path=\"/member/:memberId\" component={GroupMemberDetail} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/mypage\" component={Mypage} />\n      </Switch>\n      <Footer />\n    </BrowserRouter>\n  </div>\n  )\n}\n\nexport default App;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/footer/Footer.js",[],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/main/main.js",[],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/navigation/Navigation.js",["79"],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/group/Group.js",["80","81","82","83"],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/event/Event.js",["84","85","86"],"import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\nimport './Event.css'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClock, faMapMarkedAlt, faSearch, faThumbtack } from \"@fortawesome/free-solid-svg-icons\";\nimport Group from '../group/Group'\nimport Member from '../member/Member'\n\nfunction Event( {image, title, description, date, location, attendants, study, display} ) {\n    if(display === \"thum-main\") {\n        return (\n            <div>\n                <div className=\"event-thum-detail\">\n                    <p className=\"event-date\">{date}</p>\n                    <p className=\"event-title\">{title}</p>\n                    <p className=\"event-description\">{description}</p>\n                    <p className=\"event-location\">\n                        <FontAwesomeIcon icon={faThumbtack} /> {location}\n                    </p>\n                </div>\n            </div>\n        )\n    } else if(display === \"thum-group\"){\n        return (\n            <div>\n                <div className=\"thum-group\">\n                    <p className=\"event-date\">{date}</p>\n                    <p className=\"event-title\">{title}</p>\n                    <p className=\"event-location\">\n                        <FontAwesomeIcon icon={faThumbtack} /> {location}\n                    </p>\n                </div>\n            </div>\n        )\n    } else if(display === \"event-detail\") {\n        return (\n            <div className=\"event-detail\">\n                <div className=\"content-hd\">\n                    <p>{date}</p>\n                    <h1>[{title}]</h1>\n                    <div className=\"event-host\">\n                        <div className=\"event-host-image\">\n                            {attendants[0] === undefined ? \"Loading..\" : <img src={attendants[0].memberImage}></img>}\n                        </div>\n                        <div className=\"event-host-name\">\n                            <p style={{color:\"grey\"}}>Hosted by</p>\n                            {attendants[0] === undefined ? \"Loading..\" : <p>{attendants[0].memberName}</p>}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"content-bd\">\n                    <div className=\"content-bd-main\">\n                        <div className=\"main-image\">\n                            <img src=\"https://kung.kr/files/attach/images/3830964/814/596/007/bec42d29f1665ebc059ea81ada6b4611.jpg\"></img>\n                        </div>\n                        <div className=\"main-description\">\n                            <h3>세부사항</h3>\n                            <p>{description}</p>\n                            {/* <p>\n                                Saturday Morning English Talk Time at Hongdae<br />\n                                <br />\n                                Location?: Hongdae Terrace 서교동[masked] Floor<br />\n                                When?: 11:00 ~ 13:00 on Saturdays<br />\n                                <br />\n                                Inclusions:<br />\n                                2 drinks on the menu *Some drinks can’t be available in the morning<br />\n                                2 hours of meetup on Saturday morning hosted by Seohee<br />\n                                Chance to speak daily conversation to social issues<br />\n                                Get some information about go-to restaurants and places from locals<br />\n                                2 hours of social meetup following this event<br />\n                                <br />\n                                Event Description:<br />\n                                Short summary / hook of the meetup:<br />\n                                Good morning! GSM Hongdae opens a brand-new morning English speaking group finally.<br />\n                                Come and join us and share your opinions on various topics from real-life topics to current issues.<br />\n                            </p> */}\n                        </div>\n                        <div className=\"main-attendants\">\n                            <h3>참석자</h3>\n                            <div className=\"attendants-member\">\n                                {attendants.map(attendant => (\n                                    <div className=\"thum-event-member\" key={attendant.memberId}>\n                                        <Link to={{\n                                            pathname: '/member/' + attendant.memberId,\n                                            state: {\n                                                image: attendant.memberImage,\n                                                name: attendant.memberName,\n                                                gender: attendant.memberGender,\n                                                city: attendant.memberAddress,\n                                                display: \"detail-inGroup\"\n                                            }\n                                        }}>\n                                            <Member\n                                                image = {attendant.memberImage}\n                                                name = {attendant.memberName}\n                                                city = {attendant.memberAddress}\n                                                display = \"thum-event\"\n                                            />\n                                        </Link>\n                                    </div>\n                                ))} \n                            </div>\n                        </div>\n                        <div className=\"main-join\">\n                            <div className=\"main-join-left\">\n                                <p>{date}</p>\n                                <h3>{title}</h3>\n                            </div>\n                            <div className=\"main-join-right\">\n                                <button>참석하기</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"content-bd-side\">\n                        <div className=\"side-group\">\n                            <Group\n                                image = {study.studyImage}\n                                name = {study.studyName}\n                                memberCnt = {study.memberCnt}\n                                tags = {study.studyTag}\n                                display = {\"thum-event\"}\n                            />\n                        </div>\n                        <div className=\"side-summary\">\n                            <div className=\"summary-date\">\n                                <p><FontAwesomeIcon icon={faClock} /> {date}</p>\n                            </div>\n                            <div className=\"summary-location\">\n                                <p><FontAwesomeIcon icon={faMapMarkedAlt} /> {location}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div> \n            </div>\n        )\n    } else {\n        return (\n            <div>???</div>\n        )\n    }\n}\n\nEvent.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n    date: PropTypes.string,\n    location: PropTypes.string,\n    attendents: PropTypes.array,\n    group: PropTypes.array,\n    display: PropTypes.string,\n}\n\n// Need these API calls to fetch data \n// 1. host's info -> content head\n// 2. group's info -> content body / side\n// 3. members who will be attend -> content body / main\n\nexport default Event;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/category/Category.js",["87"],"import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\nimport './Category.css'\n\nfunction Category( {thumbnail, name} ) {\n    return (\n        <div className=\"category-thum\">\n            <div className=\"category-thumbnail\">\n                <img src={thumbnail} alt=\"category-thumnail\"></img>\n            </div>\n            <p>{name}</p>\n        </div>\n    )\n}\n\nCategory.propTypes = {\n    thumbnail: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n}\n\nexport default Category;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/event-detail/event-detail.js",["88"],"import React from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\nimport Event from \"../../components/event/Event\"\nimport './event-detail.css'\n\nclass EventDetail extends React.Component{\n    constructor(){\n        super();\n        this.state = {event: [], attendants: [], study: []}\n    }\n\n    getEventDetail = async () => {\n        const url = \"http://localhost:8080\" + this.props.match.url;\n        console.log(url);\n        const data = await axios.get(url);\n        console.log(\"이벤트 내용: \" + JSON.stringify(data.data[0]));\n        console.log(\"스터디 내용: \" + JSON.stringify(data.data[1]));\n        console.log(\"참석자 내용: \" + JSON.stringify(data.data[2]));\n        this.setState({\n            event: data.data[0],\n            study: data.data[1],\n            attendants: data.data[2]\n        });\n    }\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push(\"/\");\n        }\n        this.getEventDetail();\n    }\n    render() {\n        const { location } = this.props;\n        const { event, study, attendants } = this.state;\n        if(event !== undefined){\n            return (\n                <div className=\"event-detail\" key={event.eventId}>\n                    <Event\n                        image = {event.eventImage}\n                        title = {event.eventName}\n                        description = {event.eventDescription}\n                        date = {event.eventDate}\n                        location = {event.eventLocation}\n                        display = {location.state.display}\n                        study = {study}\n                        attendants = {attendants}\n                    />\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default EventDetail;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/member/Member.js",["89","90","91","92"],"import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport './Member.css'\n\n\nfunction Member( {image, name, city, gender, display} ){\n    if(display === \"thum-event\"){\n        return (\n            <div>\n                <div className=\"thum-event-member-image\">\n                        <img src={image}></img>\n                </div>\n                <div className=\"thum-event-member-name\">\n                        <p className=\"member-name\">{name}</p>\n                        <p className=\"member-city\">{city}</p>\n                </div>\n            </div>\n        )\n    } else if(display === \"thum-group\"){\n        return (\n            <div>\n                <div className=\"thum-group-member-image\">\n                        <img src={image}></img>\n                </div>\n                <div className=\"thum-group-member-name\">\n                        <p className=\"member-name\">{name}</p>\n                </div>\n            </div>\n        )\n    } else if(display === \"detail-inGroup\"){\n        return (\n            <div className=\"detail-inGroup\">\n                <h2>스터디 회원 정보</h2>\n                <div className=\"detail-inGroup-image\">\n                    <img src={image} arl=\"\" />\n                </div>\n                <div className=\"detail-inGroup-info\">\n                    <span>이름 : {name}</span>\n                    <span>성별 : {gender}</span>\n                    <span>지역 : {city}</span>\n                </div>\n            </div>\n        )\n    } else if(display === \"mypage\") {\n        return (\n            <div>\n                 <div className=\"detail-inGroup\">\n                    <h2>스터디 회원 정보</h2>\n                    <div className=\"detail-inGroup-image\">\n                        <img src={image} arl=\"\" />\n                    </div>\n                    <div className=\"detail-inGroup-info\">\n                        <span>이름 : {name}</span>\n                        <span>성별 : {gender}</span>\n                        <span>지역 : {city}</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nMember.propTypes = {\n    image: PropTypes.string,\n    name: PropTypes.string,\n    gender: PropTypes.string,\n    city: PropTypes.string,\n    display: PropTypes.string\n}\n\nexport default Member;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/group-detail/group-detail.js",["93"],"import React from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\nimport './group-detail.css'\nimport Group from '../../components/group/Group'\n\nclass GroupDetail extends React.Component{\n    constructor(){\n        super();\n        this.state = { study: [] , members: [], events: []}\n    }\n    getStudyDetail = async () => {\n        const url = \"http://localhost:8080\" + this.props.match.url;\n        console.log(url);\n        const data = await axios.get(url);\n        console.log(JSON.stringify(data.data));\n        this.setState({\n            study: data.data[0], \n            members: data.data[1],\n            events: data.data[2]\n        });\n    }\n\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push(\"/\");\n        }\n\n        this.getStudyDetail();\n    }\n    \n    render() {\n        const { location } = this.props;\n        const { study, members, events } = this.state;\n        if(study !== undefined){\n            return (\n                <div className=\"group-detail\" key={study.studyId}>\n                    <Group\n                        id = {study.studyId}\n                        image = {study.studyImage}\n                        name = {study.studyName}\n                        description = {study.studyDescription}\n                        memberCnt = {study.memberCnt}\n                        tag = {study.studyTag}\n                        display = {location.state.display}\n                        members = {members}\n                        events = {events}\n                    />\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default GroupDetail;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/ScrollToTop.js",[],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/search/search.js",["94","95","96"],"import React from \"react\"\nimport { Link } from \"react-router-dom\";\nimport './search.css';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Autoplay }from \"swiper\";\nimport \"swiper/swiper-bundle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\nimport Group from \"../../components/group/Group\"\nimport Event from \"../../components/event/Event\"\nimport axios from \"axios\";\n\n\n\nclass Search extends React.Component{\n    constructor(props) {\n        super(props);\n\n        SwiperCore.use([Autoplay]);\n        const { location } = this.props;\n        \n        this.state = {\n            //isLoggedIn: location.state.isLoggedIn,\n            value: \"study\",\n            keyword: (location.search.split('&')[0]).split('=')[1],\n            condition: (location.search.split('&')[1]).split('=')[1],\n            search: location.search,\n            slides: [\n                <SwiperSlide key=\"slide1\">\n                    <img\n                    src=\"/images/search_main1.jpeg\"\n                    alt=\"search_main1\"\n                    />\n                </SwiperSlide>,\n                <SwiperSlide key=\"slide2\">\n                    <img\n                    src=\"/images/search_main2.jpeg\"\n                    alt=\"search_main2\"\n                    />\n                </SwiperSlide>,\n                <SwiperSlide key=\"slide3\">\n                    <img\n                    src=\"/images/search_main3.jpeg\"\n                    alt=\"search_main3\"\n                    />\n                </SwiperSlide>\n            ],\n            results: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.keywordChange = this.keywordChange.bind(this);\n    }\n    \n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n    }\n\n    keywordChange = (event) => {\n        this.setState({keyword: event.target.value});\n    }\n\n    render() {\n        const {\n            search,\n            //isLoggedIn,\n            value,\n            keyword,\n            condition,\n            results,\n            slides\n        } = this.state;\n        const {history} = this.props;\n        console.log(this.props);\n        // const keyword = (search.split('&')[0]).split('=')[1];\n\n        return (\n            <div className=\"search\">\n                <Swiper\n                    spaceBetween={30} \n                    centeredSlides={true} \n                    loop={true}\n                    autoplay={{\n                        \"delay\": 3000,\n                        \"disableOnInteraction\": false\n                    }}\n                >\n                    {slides}\n                </Swiper>\n                <div className=\"search-box\">\n                    <select value={this.state.value} onChange={this.handleChange}>\n                        <option value=\"study\">스터디 찾기</option>\n                        <option value=\"event\">이벤트 찾기</option>\n                    </select>\n                    <input type=\"text\" className=\"searchByKeyword\" placeholder=\"키워드 검색\" onChange={this.keywordChange} defaultValue={decodeURIComponent(keyword)}></input>\n                    {/* <input type=\"text\" className=\"searchByLocation\" placeholder=\"위치 검색\"></input> */}\n                    {/* <Link to={{\n                        pathname: '/search',\n                        search: \"keyword=\" + keyword + \"&searchCondition=\" + value,\n                        state: { isLoggedIn }\n                    }}>\n                    <button><FontAwesomeIcon icon={faSearch} /></button>\n                    </Link> */}\n                    <button onClick={this.doSearch.bind(this)}><FontAwesomeIcon icon={faSearch} /></button>\n                </div>\n                <div className=\"search-result\">\n                    {condition === \"study\" ? results.map(result => (\n                        <Link to={{\n                            pathname: '/study/' + (result.studyId),\n                            state: {\n                                //isLoggedIn: isLoggedIn,\n                                display: \"group-detail\"\n                            }\n                        }}>\n                        <div className=\"group-thum\" key={result.studyId}>\n                            <Group\n                                image = {result.studyImage}\n                                name = {result.studyName}\n                                memberCnt = {result.memberCnt}\n                                display = \"thum-main\"\n                            />\n                        </div>\n                        </Link>\n                    ))\n                    : results.map(result => (\n                        <div className=\"event-thum\" key={result.eventId}>\n                        <Link to={{\n                            pathname: '/event/' + (result.eventId),\n                            state: {\n                                //isLoggedIn: isLoggedIn,\n                                display: \"event-detail\"\n                            }\n                        }}>\n                            <Event\n                                title = {result.eventName}\n                                description = {result.eventDescription}\n                                date = {result.eventDate}\n                                location = {result.eventLocation}\n                                display = \"thum-main\"\n                            />\n                        </Link>\n                        </div>\n                    ))}\n                    {/* {isResultGroups ? \n                    results.map(result => (\n                        <Link to={{\n                            pathname: '/group-detail',\n                            state: {\n                                isLoggedIn: isLoggedIn,\n                                image: result.image,\n                                name: result.title,\n                                numOfMembers: result.members,\n                                display: \"group-detail\"\n                            }\n                        }}>\n                            <Group\n                                key = {result.id}\n                                image = {result.image}\n                                name = {result.title}\n                                numOfMembers = {result.members}\n                                display = \"thum-main\"\n                            />\n                        </Link>\n                    )) : \n                    results.map(result => (\n                        <Event\n                            key = {result.id}\n                            title = {result.title}\n                            description = {result.content}\n                            date = {\"N/A\"}\n                            location = {result.location}\n                            display = \"thum-main\"\n                        />\n                    ))} */}\n                    <div className=\"search-result-more\">\n                        <button>Load more results</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    doSearch = () => {\n        // console.log(this.state.value);\n        // console.log(this.state.keyword);\n        const url = \"http://localhost:8080/search?keyword=\" + encodeURIComponent(this.state.keyword) + \"&searchCondition=\" + this.state.value;\n        this.getSearchResults(url);\n        this.props.history.push(\"search?keyword=\" + encodeURIComponent(this.state.keyword) + \"&searchCondition=\" + this.state.value);\n        this.setState({condition: this.state.value});\n    }\n    getSearchResults = async (url) => {\n        // const url = \"http://localhost:8080/search\" + this.state.search;\n        // console.log(url);\n        const data = await axios.get(url);\n        console.log(\"Search data: \" + JSON.stringify(data));\n        this.setState({results: data.data});\n    }\n    componentDidMount(){\n        const url = \"http://localhost:8080/search\" + this.state.search;\n        this.getSearchResults(url);\n    }\n}\n\nexport default Search;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/group-member-detail/group-member-detail.js",["97","98","99"],"import React from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\n// import './group-detail.css'\nimport Member from \"../../components/member/Member\";\n\nclass GroupMemberDetail extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push(\"/\");\n        }\n    }\n    \n    render() {\n        const { location } = this.props;\n        return (\n            <Member\n                image = {location.state.image}\n                name = {location.state.name}\n                city = {location.state.city}\n                gender = {location.state.gender}\n                display = {location.state.display}\n            />\n        )\n        // if(study !== undefined){\n        //     return (\n        //         <div className=\"group-detail\" key={study.studyId}>\n        //             <Group\n        //                 id = {study.studyId}\n        //                 image = {study.studyImage}\n        //                 name = {study.studyName}\n        //                 description = {study.studyDescription}\n        //                 memberCnt = {study.memberCnt}\n        //                 tag = {study.studyTag}\n        //                 display = {location.state.display}\n        //                 members = {members}\n        //             />\n        //         </div>\n        //     )\n        // } else {\n        //     return null;\n        // }\n    }\n}\n\nexport default GroupMemberDetail;","/Users/minguchoi/Documents/GitHub/Studium/frontend/src/routes/mypage/mypage.js",[],"/Users/minguchoi/Documents/GitHub/Studium/frontend/src/components/calendar/Calendar.js",["100","101","102"],"import React from 'react';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport './Calendar.css'\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nexport default class Calendar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        dateContext: moment(),\n        today: moment(),\n        showMonthPopup: false,\n        showYearPopup: false,\n        selectedDay: null\n    }\n\n    weekdays = moment.weekdays(); //[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednessday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    weekdaysShort = moment.weekdaysShort(); // [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n    months = moment.months();\n\n    year = () => {\n        return this.state.dateContext.format(\"Y\");\n    }\n    month = () => {\n        return this.state.dateContext.format(\"MMMM\");\n    }\n    monthAsNumber = (monthInLetter) => {\n        //console.log(\"input : \" + monthInLetter);\n        if(monthInLetter === \"January\") {\n            return \"01\";\n        } else if(monthInLetter === \"February\"){\n            return \"02\";\n        } else if(monthInLetter === \"March\"){\n            return \"03\";\n        } else if(monthInLetter === \"April\"){\n            return \"04\";\n        } else if(monthInLetter === \"May\"){\n            return \"05\";\n        } else if(monthInLetter === \"June\"){\n            return \"06\";\n        } else if(monthInLetter === \"July\"){\n            return \"07\";\n        } else if(monthInLetter === \"August\"){\n            return \"08\";\n        } else if(monthInLetter === \"September\"){\n            return \"09\";\n        } else if(monthInLetter === \"October\"){\n            return \"10\";\n        } else if(monthInLetter === \"November\"){\n            return \"11\";\n        } else if(monthInLetter === \"December\"){\n            return \"12\";\n        } else {\n            return \"error\";\n        }\n    }\n    daysInMonth = () => {\n        return this.state.dateContext.daysInMonth();\n    }\n    currentDate = () => {\n        console.log(\"currentDate: \", this.state.dateContext.get(\"date\"));\n        return this.state.dateContext.get(\"date\");\n    }\n    currentDay = () => {\n        return this.state.dateContext.format(\"D\");\n    }\n\n    firstDayOfMonth = () => {\n        let dateContext = this.state.dateContext;\n        let firstDay = moment(dateContext).startOf('month').format('d'); // Day of week 0...1..5...6\n        return firstDay;\n    }\n\n    setMonth = (month) => {\n        let monthNo = this.months.indexOf(month);\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).set(\"month\", monthNo);\n        this.setState({\n            dateContext: dateContext\n        });\n    }\n\n    nextMonth = () => {\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).add(1, \"month\");\n        this.setState({\n            dateContext: dateContext\n        });\n        this.props.onNextMonth && this.props.onNextMonth();\n    }\n\n    prevMonth = () => {\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).subtract(1, \"month\");\n        this.setState({\n            dateContext: dateContext\n        });\n        this.props.onPrevMonth && this.props.onPrevMonth();\n    }\n\n    onSelectChange = (e, data) => {\n        this.setMonth(data);\n        this.props.onMonthChange && this.props.onMonthChange();\n\n    }\n    SelectList = (props) => {\n        let popup = props.data.map((data) => {\n            return (\n                <div key={data}>\n                    <a href=\"#\" onClick={(e)=> {this.onSelectChange(e, data)}}>\n                        {data}\n                    </a>\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"month-popup\">\n                {popup}\n            </div>\n        );\n    }\n\n    onChangeMonth = (e, month) => {\n        this.setState({\n            showMonthPopup: !this.state.showMonthPopup\n        });\n    }\n\n    MonthNav = () => {\n        return (\n            <span className=\"label-month\"\n                onClick={(e)=> {this.onChangeMonth(e, this.month())}}>\n                {this.month()}\n                {/* {this.state.showMonthPopup &&\n                 <this.SelectList data={this.months} />\n                } */}\n            </span>\n        );\n    }\n\n    showYearEditor = () => {\n        this.setState({\n            showYearNav: true\n        });\n    }\n\n    setYear = (year) => {\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).set(\"year\", year);\n        this.setState({\n            dateContext: dateContext\n        })\n    }\n    onYearChange = (e) => {\n        this.setYear(e.target.value);\n        this.props.onYearChange && this.props.onYearChange(e, e.target.value);\n    }\n\n    onKeyUpYear = (e) => {\n        if (e.which === 13 || e.which === 27) {\n            this.setYear(e.target.value);\n            this.setState({\n                showYearNav: false\n            })\n        }\n    }\n\n    YearNav = () => {\n        return (\n            this.state.showYearNav ?\n            <input\n                defaultValue = {this.year()}\n                className=\"editor-year\"\n                ref={(yearInput) => { this.yearInput = yearInput}}\n                onKeyUp= {(e) => this.onKeyUpYear(e)}\n                onChange = {(e) => this.onYearChange(e)}\n                type=\"number\"\n                placeholder=\"year\"/>\n            :\n            <span\n                className=\"label-year\"\n                onDoubleClick={(e)=> { this.showYearEditor()}}>\n                {this.year()}\n            </span>\n        );\n    }\n\n    onDayClick = (e, day) => {\n        this.setState({\n            selectedDay: day\n        }, () => {\n            console.log(\"SELECTED DAY: \", this.state.selectedDay);\n        });\n\n        this.props.onDayClick && this.props.onDayClick(e, day);\n    }\n\n    render() {\n        const eventDates = this.props.eventDates;\n        //console.log(\"props.eventDate\" + eventDates);\n        // Map the weekdays i.e Sun, Mon, Tue etc as <td>\n        let weekdays = this.weekdaysShort.map((day) => {\n            return (\n                <td key={day} className=\"week-day\">{day}</td>\n            )\n        });\n\n        let blanks = [];\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\n            blanks.push(<td key={i * 80} className=\"emptySlot\">\n                {\"\"}\n                </td>\n            );\n        }\n\n        //console.log(\"blanks: \", blanks);\n\n        let eventDatesThisMonth = [];\n        if(eventDates.length > 0){\n            eventDates.map(date => (\n                ( this.year() === date.split(\"-\")[0] && this.monthAsNumber(this.month()) === date.split(\"-\")[1] ) ?\n                eventDatesThisMonth.push(date.split(\"-\")[2])\n                : \"\"\n            ))\n        }\n\n        let daysInMonth = [];\n        for (let d = 1; d <= this.daysInMonth(); d++) {\n            let className = (d == this.currentDay() ? \"day current-day\": \"day\");\n            let selectedClass = (eventDatesThisMonth.includes(String(d)) ? \" selected-day \" : \"\")\n            daysInMonth.push(\n                <td key={d} className={className + selectedClass} >\n                    <span onClick={(e)=>{this.onDayClick(e, d)}}>{d}</span>\n                </td>\n            );\n        }\n\n\n        //console.log(\"days: \", daysInMonth);\n\n        var totalSlots = [...blanks, ...daysInMonth];\n        let rows = [];\n        let cells = [];\n\n        totalSlots.forEach((row, i) => {\n            if ((i % 7) !== 0) {\n                cells.push(row);\n            } else {\n                let insertRow = cells.slice();\n                rows.push(insertRow);\n                cells = [];\n                cells.push(row);\n            }\n            if (i === totalSlots.length - 1) {\n                let insertRow = cells.slice();\n                rows.push(insertRow);\n            }\n        });\n\n        let trElems = rows.map((d, i) => {\n            return (\n                <tr key={i*100}>\n                    {d}\n                </tr>\n            );\n        })\n\n        return (\n            <div className=\"calendar-container\" style={this.style}>\n                <table className=\"calendar\">\n                    <thead>\n                        <tr className=\"calendar-header\">\n                            <td colSpan=\"7\">\n                                <FontAwesomeIcon className=\"prevButton\" icon={faChevronLeft} onClick={(e)=> {this.prevMonth()}} />\n                                <this.MonthNav />\n                                <FontAwesomeIcon className=\"nextButton\" icon={faChevronRight} onClick={(e)=> {this.nextMonth()}} />\n                                {\" \"}\n                                <this.YearNav />\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            {weekdays}\n                        </tr>\n                        {trElems}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":33,"nodeType":"109","messageId":"110","endLine":2,"endColumn":39},{"ruleId":"111","severity":1,"message":"112","line":10,"column":17,"nodeType":"113","endLine":10,"endColumn":53},{"ruleId":"111","severity":1,"message":"112","line":15,"column":21,"nodeType":"113","endLine":15,"endColumn":38},{"ruleId":"111","severity":1,"message":"112","line":28,"column":21,"nodeType":"113","endLine":28,"endColumn":38},{"ruleId":"111","severity":1,"message":"112","line":42,"column":25,"nodeType":"113","endLine":42,"endColumn":42},{"ruleId":"114","severity":1,"message":"115","line":91,"column":36,"nodeType":"116","messageId":"117","endLine":91,"endColumn":38},{"ruleId":"107","severity":1,"message":"118","line":6,"column":35,"nodeType":"109","messageId":"110","endLine":6,"endColumn":43},{"ruleId":"111","severity":1,"message":"112","line":44,"column":74,"nodeType":"113","endLine":44,"endColumn":111},{"ruleId":"111","severity":1,"message":"112","line":55,"column":29,"nodeType":"113","endLine":55,"endColumn":133},{"ruleId":"107","severity":1,"message":"119","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"119","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"112","line":11,"column":25,"nodeType":"113","endLine":11,"endColumn":42},{"ruleId":"111","severity":1,"message":"112","line":23,"column":25,"nodeType":"113","endLine":23,"endColumn":42},{"ruleId":"111","severity":1,"message":"112","line":35,"column":21,"nodeType":"113","endLine":35,"endColumn":47},{"ruleId":"111","severity":1,"message":"112","line":50,"column":25,"nodeType":"113","endLine":50,"endColumn":51},{"ruleId":"107","severity":1,"message":"119","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"120","line":64,"column":13,"nodeType":"109","messageId":"110","endLine":64,"endColumn":19},{"ruleId":"107","severity":1,"message":"121","line":66,"column":13,"nodeType":"109","messageId":"110","endLine":66,"endColumn":18},{"ruleId":"107","severity":1,"message":"122","line":72,"column":16,"nodeType":"109","messageId":"110","endLine":72,"endColumn":23},{"ruleId":"107","severity":1,"message":"123","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":13},{"ruleId":"107","severity":1,"message":"119","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":8,"column":5,"nodeType":"126","messageId":"127","endLine":10,"endColumn":6},{"ruleId":"124","severity":1,"message":"125","line":8,"column":5,"nodeType":"126","messageId":"127","endLine":10,"endColumn":6},{"ruleId":"128","severity":1,"message":"129","line":113,"column":21,"nodeType":"113","endLine":113,"endColumn":80},{"ruleId":"114","severity":1,"message":"115","line":233,"column":32,"nodeType":"116","messageId":"117","endLine":233,"endColumn":34},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'faSearch' is defined but never used.","'Link' is defined but never used.","'search' is assigned a value but never used.","'value' is assigned a value but never used.","'history' is assigned a value but never used.","'axios' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]